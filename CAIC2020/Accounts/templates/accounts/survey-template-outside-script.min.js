function checkForInputPlaceholder(a) { $(a).val().length > 0 ? $(a).addClass("used") : $(a).removeClass("used") } function getValidationMessageKeyForMatrixAutoFocus(a) { switch (a) { case 0: return "application.takesurvey.batteryunichoice.required"; case 2: return "application.takesurvey.batteryunichoice.row.column.required" } } function ajaxLinkConfirm(a, b, c) { confirm(c) && qp_sectionDisplayScript.ajaxLink(a, b) } function ajaxDeleteRow1(a, b, c, d, e, f, g) { e || (e = "id"), b = b + (b.indexOf("?") >= 0 ? "&" : "?") + e + "=" + c, $("#" + a).length && qp_sectionDisplayScript.confirmedToDelete(a, b, c) } function ajaxLink(a, b) { qp_sectionDisplayScript.ajaxLink(a, b) } function modifyText(a, b) { document.getElementById && "" != b && (obj = document.getElementById(a), obj && (obj.innerHTML = b)) } function updateLanguageAttribute(a) { null != a && void 0 != a && "" != a && "null" != a && (document.getElementsByTagName("html")[0].lang = a) } function getTimeStr(a, b) { var c = b ? a : a / 1e3, d = Math.floor(c / 86400), e = Math.floor(c / 3600) - 24 * d, f = Math.floor(c / 60) - 60 * (d > 0 && 0 === e ? 24 : e), g = c - 86400 * d - 3600 * e - 60 * f; return setSingularPluralDisplay(getTimerDisplayParams(d, e, f, g, b)), (d >= 10 ? d : "0" + d) + " " + (e >= 10 ? e : "0" + e) + " " + (f >= 10 ? f : "0" + f) + " " + (g >= 10 ? g : "0" + g) } function getTimerDisplayParams(a, b, c, d, e) { var f = {}; return f.day = a, f.hour = b, f.minute = c, f.second = d, f.daySingularDisplayID = "#dayDisplay" + getTimerDisplaSuffix(e), f.dayPluralDisplayID = "#daysDisplay" + getTimerDisplaSuffix(e), f.hourSingularDisplayID = "#hourDisplay" + getTimerDisplaSuffix(e), f.hourPluralDisplayID = "#hoursDisplay" + getTimerDisplaSuffix(e), f.minuteSingularDisplayID = "#minuteDisplay" + getTimerDisplaSuffix(e), f.minutePluralDisplayID = "#minutesDisplay" + getTimerDisplaSuffix(e), f.secondSingularDisplayID = "#secondDisplay" + getTimerDisplaSuffix(e), f.secondPluralDisplayID = "#secondsDisplay" + getTimerDisplaSuffix(e), f } function getTimerDisplaSuffix(a) { return a ? "PT" : "" } function setTimeUnitDisplay(a, b, c) { 1 === a && $(b).is(".hidden") ? ($(c).addClass("hidden"), $(b).removeClass("hidden")) : 1 !== a && $(c).is(".hidden") && ($(b).addClass("hidden"), $(c).removeClass("hidden")) } function setSingularPluralDisplay(a) { setTimeUnitDisplay(a.day, a.daySingularDisplayID, a.dayPluralDisplayID), setTimeUnitDisplay(a.hour, a.hourSingularDisplayID, a.hourPluralDisplayID), setTimeUnitDisplay(a.minute, a.minuteSingularDisplayID, a.minutePluralDisplayID), setTimeUnitDisplay(a.second, a.secondSingularDisplayID, a.secondPluralDisplayID) } function setTimeDisplay(a, b) { var c = b ? "pt" : "st", d = document.getElementById(c + "-hour"), e = document.getElementById(c + "-min"), f = document.getElementById(c + "-sec"); d && (d.innerHTML = a.split(" ")[1]), e && (e.innerHTML = a.split(" ")[2]), f && (f.innerHTML = a.split(" ")[3]) } function setExtendTimerOn() { $("#pt-extend-timer").remove(), $("#pt-title").removeClass("hidden"), $("#pt-extend-timer-value").val(pageTimerParams.extendTime), document.cookie = "page_timer_extended_" + pageTimerParams.timerQuestionID + "=true;path=/;", pageTimerParams.timeLeft += pageTimerParams.extendTime, pageTimerParams.maxTime += pageTimerParams.extendTime } function suspendPageTimerIfPresent() { loadedPageTimers.length > 0 && (loadedPageTimers[0].suspend(), loadedPageTimers = []) } function addSkipJSValidationInput(a) { var b = document.createElement("input"); b.setAttribute("type", "hidden"), b.setAttribute("name", "skipJSValidationInput"), b.setAttribute("value", "true"), a.appendChild(b), a.onsubmit() } var qp_sectionDisplayScript = { initBootStrapDropDown: function (a) { $(".qp-list-container#" + $(a).attr("id") + "-list").remove(), $(a).selectpicker, $(a).prop("multiple") ? $(a).parent().addClass("multi-select") : $(a).parent().addClass("single-select") }, initTextBoxPlaceholders: function () { $(".form-type-question .form-input, .matrix-spreadsheet-question .form-input").each(function () { checkForInputPlaceholder(this) }), $(".form-type-question .form-input, .matrix-spreadsheet-question .form-input").on("change keyup", function () { checkForInputPlaceholder(this) }) }, detectMatrixScroll: function () { function a() { var a = $(window).width(), b = a > j; return j = a, b } function b(a) { a.scrollWidth > a.clientWidth && $(a).parent().addClass("has-mobile-rendering") } function c(a) { a.scrollWidth > a.clientWidth ? ($(a).parent().find(".matrix-mobile-scroll").show(), e()) : $(a).parent().find(".matrix-mobile-scroll").hide() } function d() { $(".matrix-multipoint-question, .matrix-spreadsheet-question, .matrix-sidebyside-question, .flex-matrix-question").find(".table-responsive").hasScrollBar() } function e() { $(".matrix-mobile-scroll").unbind("click"), $(".matrix-mobile-scroll").unbind("scroll"), $(".matrix-mobile-scroll").on("click", function (a) { a.preventDefault(), $("body").hasClass("language-rtl") ? $(this).siblings(".table-responsive").animate({ scrollLeft: "-=100" }, 200) : $(this).siblings(".table-responsive").animate({ scrollLeft: "+=100" }, 200), $(this).fadeOut() }), $(".table-responsive").scroll(function () { $(this).scrollLeft() >= 10 && $(this).siblings(".matrix-mobile-scroll").fadeOut() }) } function f() { $(".has-mobile-rendering .this-height [type=radio]").unbind("click"), $(".has-mobile-rendering .this-height [type=radio]").on("click", function () { $(this).parents("tr").nextAll("tr[id^=questionRow]").first().find(".this-accordion").length > 0 ? $(this).parents("tr").nextAll("tr[id^=questionRow]").first().find(".this-accordion").click() : h($(this).parents("tr")) }) } function g(a) { h($(a).parent().siblings("[id^=questionRow].this-height")) } function h(a) { $(a).find(".this-accordion").find(".answer-options").toggleClass("rotate"), $(a).removeClass("this-height") } var j = $(window).width(); $.fn.hasScrollBar = function () { var d = !1; for (i = 0; i < this.length; i++) { var e = this.get(i); !$(e).parent().hasClass("is-bipolar") && $(e).parent().hasClass("has-mobile-on") ? ($(e).parent().hasClass("has-mobile-rendering") && a() && $(e).parent().removeClass("has-mobile-rendering"), b(e), d = !0) : c(e) } d && f() }, d(), $(window).on("resize", function () { d() }), $(".has-mobile-rendering .this-accordion").unbind("click"), $(".has-mobile-rendering .this-accordion").on("click", function () { g(this), $(this).parent().toggleClass("this-height"), $(this).find(".answer-options").toggleClass("rotate"), $("html, body").animate({ scrollTop: $(this).offset().top - 20 }, 500), f() }) } }, loadedScripts = {}, loadedTimers = [], loadedPageTimers = [], EMAIL_REGEX_PATTERN = "^[A-Za-z0-9][\\'A-Za-z0-9_+/-]*(\\.[\\'_A-Za-z0-9-+/]+)*@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$", qp_sectionDisplayScript = {
    initStarRatingBlinker: function (a) { $("#QuestionSection_" + a).find(".star-rating .full").on("click", function () { $(this).parents(".star-rating").find(".full").removeClass("is-blink"), $(this).is(".is-blink") || $(this).addClass("is-blink") }) }, initFlexRankOrder: function (a) { var b = this; $("#QuestionSection_" + a + " .flex-rank-order select").each(function () { var c = $(this).val(); c && ($(this).data("pre", c), b.disableFlexRankOrderOption($(this), a)) }), $("#QuestionSection_" + a + " select").on("change", function () { b.disableFlexRankOrderOption($(this), a) }) }, disableFlexRankOrderOption: function (a, b) { var c = a.val(), d = a.data("pre"); $("#QuestionSection_" + b + " .flex-rank-order select").not(a).find('option[value="' + d + '"]').prop("disabled", !1).removeClass("tsro-tooltip"), c && $("#QuestionSection_" + b + " select").not(a).find('option[value="' + c + '"]').prop("disabled", !0).addClass("tsro-tooltip"), a.data("pre", a.val()), $("#QuestionSection_" + b + " .flex-rank-order select").selectpicker("refresh") }, initRankOrder: function (a) { var b = this; $("#QuestionSection_" + a + " select").each(function () { var c = $(this).val(); c && ($(this).data("pre", c), b.disableRankOrderOption($(this), a)) }), $("#QuestionSection_" + a + " select").on("change", function () { b.disableRankOrderOption($(this), a) }) }, disableRankOrderOption: function (a, b) { var c = a.val(), d = a.data("pre"); $("#QuestionSection_" + b + " select").not(a).find('option[value="' + d + '"]').prop("disabled", !1).removeClass("tsro-tooltip"), c && $("#QuestionSection_" + b + " select").not(a).find('option[value="' + c + '"]').prop("disabled", !0).addClass("tsro-tooltip"), a.data("pre", a.val()), $("#QuestionSection_" + b + " select").selectpicker("refresh") }, initTableColumnHighlighting: function (a) { var b = $("." + a + " .parent-table > thead > tr > td, ." + a + " .parent-table > tbody > tr > td"); b.unbind(), b.on("mouseover", function () { var a = $(this), c = a.index(); a.parents(".parent-table").addClass("active-table"), b.filter(":nth-child(" + (c + 1) + ")").addClass("hover") }).on("mouseout", function () { b.removeClass("hover"), $("." + a + " .parent-table").removeClass("active-table") }).on("click", function () { var c = $(this), d = c.index(); $("." + a + " .parent-table td").removeClass("active"), b.filter(":nth-child(" + (d + 1) + ")").addClass("active").find(".radio-check").prop("checked", !0) }) }, store_locator_addresss_init: function (a, b) { $("#searchBox_" + b).geocomplete(a), $("#searchBox_" + b).bind("geocode:dragged", function (a, c) { $("#sl_latitude_" + b).val(c.lat()), $("#sl_longitude_" + b).val(c.lng()), (new google.maps.Geocoder).geocode({ latLng: c }, function (a, c) { $("#searchBox_" + b).geocomplete("filterGeocodeResults", a), c == google.maps.GeocoderStatus.OK ? a[0] && ($("#sl_formatted_adrs_" + b).val(a[0].formatted_address), $("#searchBox_" + b).val(a[0].formatted_address)) : ($("#noResultFound_" + b).show(), $("#noResultFound_" + b).delay(7e3).fadeOut("fast")) }) }), $("#searchBox_" + b).geocomplete().bind("geocode:error", function (a, c) { $("#noResultFound_" + b).show(), $("#noResultFound_" + b).delay(7e3).fadeOut("fast"), document.getElementById("sl_formatted_adrs_" + b).value = "" }), $("#searchButton_" + b).click(function () { document.getElementById("sl_formatted_adrs_" + b).value = "", $("#searchBox_" + b).val() && $("#searchBox_" + b).trigger("geocode") }), $("input, textarea").placeholder() }, store_locator_enable_address: function (a) { $("#sl_enable_address_" + a).is(":checked") ? ($("#slSearchCriteriaID_" + a + " .sl_address_box").attr("style", "display: inline-block !important;"), $("#slSearchCriteriaID_" + a + " .sl_location_box").hide(), $("#slSearchCriteriaID_" + a + " .sl_query_box").hide()) : ($("#slSearchCriteriaID_" + a + " .sl_address_box").hide(), $("#slSearchCriteriaID_" + a + " .sl_location_box").show(), $("#slSearchCriteriaID_" + a + " .sl_query_box").show()) }, store_locator_init: function (a, b, c) { $("#sl_searchButton_" + b).storelocator(a), $("input, textarea").placeholder(), c && $("#SurveySubmitButtonElement").hide() }, multitier_lookup_ajax_init: function () { $.widget("custom.catcomplete1", $.ui.autocomplete, { _renderMenu: function (a, b) { this.menu.element.css("max-width", this.element.outerWidth()); var c = this; $.each(b, function (b, d) { c._renderItemData(a, d) }) } }) }, multitier_lookup_ajax: function (a, b, c, d, e) { $("#u_" + b + "ajax").catcomplete1({ delay: 1, source: d, minLength: 1, select: function (d, f) { $("#u_" + b).val(f.item.answerID).trigger("change"), c > 0 && qp_sectionDisplayScript.ajaxPostLink("LookupTable_" + c, "/a/AjaxProcessor?id=" + a + "&questionID=" + c + "&divID=LookupTable_" + c + "&mode=update&value=" + $("#u_" + b).val(), e) } }), $("#u_" + b + "ajax").keyup(function (f) { var g = f.keyCode ? f.keyCode : f.which; if ($("#u_" + b).val("-1").trigger("change"), "37" != g && "38" != g && "39" != g && "40" != g) { for (var h = 0, i = d.length; h < i; h++)if ($("#u_" + b + "ajax").val().toLowerCase() == d[h].label.toLowerCase()) { $("#u_" + b).val(d[h].answerID).trigger("change"), e(); break } "-1" != $("#u_" + b).val() && c > 0 ? ($("#LookupTable_" + c).is(":empty") && (qp_sectionDisplayScript.ajaxPostLink("LookupTable_" + c, "/a/AjaxProcessor?id=" + a + "&questionID=" + c + "&divID=LookupTable_" + c + "&mode=update&value=" + $("#u_" + b).val(), e), $(".ui-menu").hide()), $("#LookupTable_" + c + "ajax").focus()) : ($("#LookupTable_" + c).html(""), e()) } }) }, multitier_lookup_change: function (a, b, c, d) { var e = $('select[name="u_' + b + '"]').val(), f = "/a/AjaxProcessor?id=" + a + "&questionID=" + c + "&mode=update&value=" + e; this.ajaxPostLink("LookupTable_" + c, f, d) }, multichoice_lookup: function (a, b, c) { var d = []; $("#div_m_" + a).on("click", "span.tag", function () { var b = $("#m_" + a).val(); $("#m_" + a).val(b.replace($(this).attr("value") + "_", "")), void 0 != c && $(this).attr("value") == c && qp_sectionDisplayScript.hideVisibility("other_" + c), $(this).remove() }), $("#input_m_" + a).bind("keydown", function (b) { if (b.keyCode === $.ui.keyCode.BACKSPACE && !b.target.value) { var d = $("#m_" + a).val(); $("#m_" + a).val(d.replace($("span.tag").last().attr("value") + "_", "")), void 0 != c && $("span.tag").last().attr("value") == c && qp_sectionDisplayScript.hideVisibility("other_" + c), $("span.tag").last().remove(), $("#input_m_" + a).trigger("blur"), $("#input_m_" + a).focus(), $("#m_" + a).trigger("change") } b.keyCode === $.ui.keyCode.TAB && b.preventDefault() }).autoComplete({ minChars: 0, delay: 400, cache: !1, source: function (c, e) { console.log("Inside source!!!!"), c = c.toLowerCase(), d = [], qp_sectionDisplayScript.showVisibility("spinnerm_" + a), $.ajax({ url: "/a/AjaxProcessor?id=" + b + "&questionID=" + a + "&mode=update&value=" + $("#input_m_" + a).val() + "&hiddenValue=" + (0 == $("#m_" + a).length ? "" : $("#m_" + a).val()), type: "POST", dataType: "html", success: function (b) { var c = $.parseHTML(b); nodeNames = [], $.each(c, function (a, b) { if ("OPTION" == b.nodeName) { var c = [b.value, b.textContent]; d.push(c) } }), d.length > 0 ? (qp_sectionDisplayScript.hideVisibility("errorDIV_" + a), $("#errorDIV_" + a).html("")) : (qp_sectionDisplayScript.showVisibility("errorDIV_" + a), $("#errorDIV_" + a).html("No suggestions found")), qp_sectionDisplayScript.hideVisibility("spinnerm_" + a), e(d) } }) }, renderItem: function (a, b) { b = b.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"); var c = new RegExp("(" + b.split(" ").join("|") + ")", "gi"); return '<div class="autocomplete-suggestion" data-langname="' + a[1].replace(/"/g, "&quot;") + '" data-lang="' + a[0] + '" data-val="' + b + '">' + a[1].replace(c, "<b>$1</b>") + "</div>" }, onSelect: function (b, d, e) { b.preventDefault(), void 0 != c && e.data("lang") == c && qp_sectionDisplayScript.showVisibility("other_" + c); var f = $("#m_" + a).val(); return $("#m_" + a).val(f + e.data("lang") + "_"), $("#input_m_" + a).parent(".input-wrapper").before("<span class='tag' value=" + e.data("lang") + ">" + e.data("langname") + "</span>"), $("#input_m_" + a).val(""), $("#input_m_" + a).trigger("blur"), $("#input_m_" + a).focus(), $("#m_" + a).trigger("change"), !1 } }) }, unichoice_lookup: function (a, b, c) { var d = (document.getElementById("u_" + a), []); $("#autocompleteu_" + a).autoComplete({ minChars: 0, delay: 700, source: function (e, f) { e = e.toLowerCase(), d = [], $("#spinneru_" + a).removeClass("hidden"), $.ajax({ url: "/a/AjaxProcessor?id=" + b + "&questionID=" + a + "&mode=update&subMode=takeSurvey&value=" + document.getElementById("autocompleteu_" + a).value, type: "POST", dataType: "html", success: function (b) { var e = $.parseHTML(b); nodeNames = []; var g = $("#u_" + a).val(); $("#u_" + a).empty(), void 0 !== c && qp_sectionDisplayScript.hideVisibility("other_" + c), $.each(e, function (b, c) { if ("OPTION" == c.nodeName) { $("#u_" + a).append(c); var e = [c.value, c.textContent]; d.push(e) } $("#u_" + a).val(g) }), d.length > 0 ? (qp_sectionDisplayScript.hideVisibility("errorDIV_" + a), $("#errorDIV_" + a).html("")) : (qp_sectionDisplayScript.showVisibility("errorDIV_" + a), $("#errorDIV_" + a).html("No suggestions found")), $("#spinneru_" + a).addClass("hidden"), f(d) } }) }, renderItem: function (a, b) { b = b.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"); var c = new RegExp("(" + b.split(" ").join("|") + ")", "gi"); return '<div class="autocomplete-suggestion" data-langname="' + a[1].replace(/"/g, "&quot;") + '" data-lang="' + a[0] + '" data-val="' + b + '">' + a[1].replace(c, "<b>$1</b>") + "</div>" }, onSelect: function (b, c, d) { b.preventDefault(), $("#autocompleteu_" + a).val(d.data("langname")), $("#u_" + a).val(d.data("lang")), $("#u_" + a).trigger("change") } }), $("#u_" + a).change(function () { void 0 != c && c == $("#u_" + a).val() ? qp_sectionDisplayScript.showVisibility("other_" + c) : qp_sectionDisplayScript.hideVisibility("other_" + c) }) }, onLoadWidthScriptForLookupTable: function (a, b, c) { var d = this.calculateWidthByAnswerText(b); $(window).width() >= 768 && $("#" + a).parents(".input-wrapper").css("width", d) }, calculateWidthByAnswerText: function (a) { var b = 172, c = 500, d = document.createElement("canvas"), e = d.getContext("2d"); e.font = "18px sans-serif"; var f = e.measureText(a).width; return f < b ? f = b : f > c && (f = c), f }, delay: function () { var a = 0; return function (b, c) { clearTimeout(a), a = setTimeout(b, c) } }(), disableTakeSurveySubmitButton: function () { $("#SurveySubmitButtonElement").attr("disabled", "disabled") }, enableTakeSurveySubmitButton: function () { $("#SurveySubmitButtonElement").removeAttr("disabled") }, validateTextEmbedData: function (a, b, c) { null != a && "" !== a ? this.ajaxPostLink(b, c, this.enableTakeSurveySubmitButton) : this.modifyTextNoCheck(b, "") }, validateUSZip: function (a, b, c) { null != a && 5 == a.length ? this.ajaxPostLink(b, c) : this.modifyTextNoCheck(b, "") }, validateMexicoZip: function (a, b, c) { null != a && 5 == a.length ? this.ajaxPostLink(b, c) : this.modifyTextNoCheck(b, "") }, validateBelgiumZip: function (a, b, c) { null != a && 4 == a.length ? this.ajaxPostLink(b, c) : this.modifyTextNoCheck(b, "") }, validateUKZip: function (a, b, c) { null != a ? this.ajaxPostLink(b, c) : this.modifyTextNoCheck(b, "") }, retrieveUniversities: function (a, b, c) { null != a ? this.ajaxPostLink(b, c) : this.modifyTextNoCheck(b, "") }, validateCAZip: function (a, b, c) { null != a && 7 == a.length ? this.ajaxPostLink(b, c) : this.modifyTextNoCheck(b, "") }, validateAUZip: function (a, b, c) { null != a && 4 == a.length ? this.ajaxPostLink(b, c) : this.modifyTextNoCheck(b, "") }, validateZip: function (a, b, c) { null != a && a.length >= 5 ? this.ajaxPostLink(b, c) : this.modifyTextNoCheck(b, "") }, modifyTextNoCheck: function (a, b) { document.getElementById && (obj = document.getElementById(a), obj && (obj.innerHTML = b)) }, ajaxSubmitFormObject: function () { var a = {}; a.silent = !1, a.evaluateJS = !1; for (var b = 0; b < arguments.length; b++)switch (b) { case 0: a.divID = arguments[b]; break; case 1: a.url = arguments[b]; break; case 2: a.htmlForm = arguments[b]; break; case 3: a.silent = arguments[b]; break; case 4: a.spinnerDivID = arguments[b]; break; case 5: a.onajaxcomplete = arguments[b] }this.ajaxRequest(a) }, ajaxLink: function (a, b) { this.ajaxRequest({ divID: a, url: b }) }, ajaxLink: function (a, b, c) { this.ajaxRequest({ divID: a, url: b, onajaxcomplete: c }) }, ajaxPostLink: function (a, b) { this.ajaxRequest({ divID: a, url: b, isOnlyPost: !0 }) }, ajaxPostLink: function (a, b, c) { this.ajaxRequest({ divID: a, url: b, onajaxcomplete: c, isOnlyPost: !0 }) }, updateQueryStringParameter: function (a, b, c) { var d = new RegExp("([?&])" + b + "=.*?(&|$)", "i"), e = -1 !== a.indexOf("?") ? "&" : "?"; return a.match(d) ? a.replace(d, "$1" + b + "=" + c + "$2") : a + e + b + "=" + c }, getUrlParameter: function (a) { var b, c, d = decodeURIComponent(window.location.search.substring(1)), e = d.split("&"); for (c = 0; c < e.length; c++)if (b = e[c].split("="), b[0] === a) return void 0 === b[1] || b[1] }, getCSRFTokenURL: function (a) { var b = "ct", c = this.getUrlParameter(b); return a.indexOf(b + "=") <= 0 && void 0 != c ? this.updateQueryStringParameter(a, b, c) : a }, convertFormToURL: function (a, b) { var c = ""; for (i = 0; i < b.elements.length; i++)if (b[i].name && "" != b[i].name && b[i].type && "button" != b[i].type.toLowerCase() && "file" != b[i].type.toLowerCase() && "submit" != b[i].type.toLowerCase()) if ("checkbox" == b[i].type.toLowerCase() || "radio" == b[i].type.toLowerCase()) c += b[i].checked ? b[i].name + "=" + encodeURIComponent(b[i].value) + "&" : ""; else if (b[i].type.toLowerCase().indexOf("select") >= 0 && b[i].multiple) for (multiInd = 0; multiInd < b[i].options.length; multiInd++)b[i].options[multiInd].selected && (c += b[i].name + "=" + encodeURIComponent(b[i].options[multiInd].value) + "&"); else c += b[i].name + "=" + encodeURIComponent(b[i].value) + "&"; return c = a + (a.indexOf("?") >= 0 ? "&" : "?") + c.replace(/\&$/gi, "") }, encodeURL: function (a) { if (0 != a.split("?").length) { a = a.split("#")[0]; var b = a.split("?")[1].split("&"), c = ""; for (i = 0; i < b.length; i++)c += b[i].split("=")[0] + "=" + encodeURIComponent(b[i].split("=")[1]) + "&"; return a.split("?")[0] + "?" + c.replace(/\&$/gi, "") } }, sendAjaxRequest: function (a, b, c, d) { encodeURIComponent("[" + a + "]"); if (a = a.indexOf("?") > 0 ? a.split("?")[0] + "?ajax=true&engine=dojo&" + a.split("?")[1] : a + "?ajax=true&engine=dojo", a = c ? this.encodeURL(a) : a, c) b.open("GET", a, !0), b.setRequestHeader("Content-type", "application/x-www-form-urlencoded;charset=UTF-8"), (d && a.indexOf("discussionVote") > 0 || a.indexOf("showCreateTopic") > 0) && b.setRequestHeader("AJAX-TARGET-DIV", d.id), b.send(null); else { var e = a.split("?")[0]; b.open("POST", e, !0), b.setRequestHeader("Content-type", "application/x-www-form-urlencoded;charset=UTF-8"), (d && a.indexOf("discussionVote") > 0 || a.indexOf("showCreateTopic") > 0) && b.setRequestHeader("AJAX-TARGET-DIV", d.id); var f = a.split("?")[1]; b.send(f) } }, getAjaxRequestFinal: function (a, b, c) { var d = window.XMLHttpRequest ? new XMLHttpRequest : new ActiveXObject("Microsoft.XMLHTTP"); return d ? (this.sendAjaxRequest(a, d, c, b), d) : void alert("Could not execute AJAX Request") }, getOverlaySpinnerHTML: function (a) { return '<div style="position: ' + (a ? "fixed" : "absolute") + ';width:100%; height: 100%; top: 0%; left: 0%; z-index: 20; "><div style="position: absolute;top: 50%;left: 50%; transform: translate(-50%, -50%);"><img src="/images/app/spinner_96x96.gif" style="width: 50px; height: 50px; position: relative;" class="center-block"/></div></div>' }, sendGAData: function (a, b, c, d) { "undefined" != typeof ga && ga("send", "event", a, b, c, d) }, formatUrlForGA: function (a) { return a.indexOf("?") > -1 ? a.substring(a.lastIndexOf("/") + 1, a.lastIndexOf("?")) : a.substring(a.lastIndexOf("/") + 1, a.length) }, unbindDocumentReadyState: function () { $(document).unbind("ready"), $(document).unbind("jsTrigger") }, showHideLockPopup: function (a) { $("#lockPopup").is(":visible") || this.showModal("lockPopup"), this.addRemoveCSSLockScreenPopup(a) }, addRemoveCSSLockScreenPopup: function (a) { a.indexOf("lock-pop-up") > 0 ? ($("#lockPopup").addClass("lock-popup"), a.indexOf("full-page-heading") > 0 ? $("#lockPopup").addClass("full-page") : $("#lockPopup").removeClass("full-page"), $("#lockPopup").removeClass("lockpopup-box"), $("#lockPopup").removeClass("payment-gateway-modal")) : a.indexOf("payment-screen-popup-heading") > 0 ? ($("#lockPopup").addClass("payment-gateway-modal"), $("#lockPopup").removeClass("lockpopup-box"), $("#lockPopup").removeClass("lock-popup"), $("#lockPopup").removeClass("full-page")) : ($("#lockPopup").addClass("lockpopup-box"), $("#lockPopup").removeClass("lock-popup"), $("#lockPopup").removeClass("full-page"), $("#lockPopup").removeClass("payment-gateway-modal")) }, populateLockPopupBoxBody: function (responseText) { var ary = responseText.split("<lock-response/>"); ary[1].indexOf("ajax-eval-code") > 0 ? (ary = ary[1].split("<ajax-eval-code>"), $("#lockPopupBoxBody").html(ary[0]), eval(ary[1].split("</ajax-eval-code>")[0])) : $("#lockPopupBoxBody").html(ary[1]) }, appendTextToDiv: function (element, responseText) { if (responseText.indexOf("<lock-response/>") > 0) this.showHideLockPopup(responseText), this.populateLockPopupBoxBody(responseText); else if (responseText.indexOf("ajax-eval-code") > 0) { var targetDivID = null, ary = responseText.split("<ajax-eval-code>"); if (ary[1].indexOf("target-div-id") > 0) { var target = responseText.split("<target-div-id>"); targetDivID = target[1].split("</target-div-id>")[0] } else targetDivID = element.id; $("#" + targetDivID).html(ary[0]), eval(ary[1].split("</ajax-eval-code>")[0]) } else responseText.indexOf("//JavaScript") > 0 ? eval(responseText) : void 0 !== element && $("#" + element.id).html(responseText); void 0 !== element && $("#" + element.id).ready(function () { $(document).trigger("jsTrigger") }) }, appendPerformanceMonitor: function (a) { if (a.indexOf("ajax-performance-monitor") > 0) { var b = a; try { var c = a.split("<ajax-performance-monitor>"); a = c[0], $("#performanceMonitorID").html(c[1].split("</ajax-performance-monitor>")[0]) } catch (d) { a = b } } return a }, sendGADataIfGAPresent: function (a, b, c) { var d = (new Date).getTime(); if ("undefined" != typeof ga) try { var e = ""; a.indexOf("mode") > 0 && (e = "?" + a.substring(a.indexOf("mode="), a.length).substring(0, a.substring(a.indexOf("mode="), a.length).indexOf("&"))), this.sendGAData("AJAX CALL", b ? "form-submit" : "get", this.formatUrlForGA(a) + e, d - c) } catch (f) { } }, performAjaxOnComplete: function (a) { a && a() }, appendOverLaySpinner: function () { $($("body")).append('<div id="overlaySpinnerDiv"  align="center" class="overlay-spinner-sm"><div><img src="/images/app/loading.gif"><span class="pl10 f14">Working</span></div></div>') }, appendSpinner: function (a, b, c, d) { a && (a && $(a).fadeIn(0), void 0 !== b && b && !c ? $(a).prepend('<img src="/images/app/spinner_96x96.gif"/>') : $(a).prepend(this.getOverlaySpinnerHTML(d))) }, appendOverLaySpiner: function (a, b, c, d, e, f) { a ? this.appendOverLaySpinner() : b || this.appendSpinner(c, d, e, f) }, ajaxRequest: function (a) { var b = this; divID = a.divID, a.url = this.getCSRFTokenURL(a.url), url = a.url, htmlForm = a.htmlForm, evaluateJS = a.evaluateJS, silent = a.silent, overlaySpinner = a.overlaySpinner, spinnerDivID = a.spinnerDivID, showSpinnerCenterOfScreen = a.showSpinnerCenterOfScreen, spinnerDiv = spinnerDivID ? document.getElementById(spinnerDivID) : null, inlinePopupTitle = a.inlinePopupTitle, inlinePopupTitleDiv = document.getElementById("titlePopupHeader"), spinnerImage = a.spinnerImage; var c = a.onajaxcomplete; inlinePopup = a.inlinePopup, onlyPost = a.isOnlyPost, isOutside = a.isOutside; var d = a.divID, e = a.spinnerDivID ? document.getElementById(a.spinnerDivID) : null, f = a.url, g = (new Date).getTime(), h = !1; htmlForm && (h = !0, f = this.convertFormToURL(f, htmlForm), url = f); var i = document.getElementById(d); null === e && (e = i), isGet = !htmlForm && !onlyPost; var j = this.getAjaxRequestFinal(f, i, isGet); if (j.onreadystatechange = function () { if (4 != j.readyState) return void b.unbindDocumentReadyState(); if (j.getResponseHeader("AJAX_REDIRECT_LOCATION")) return void (b.isPageLoadedInIframe() && "true" === j.getResponseHeader("FULL_PAGE_AJAX_REDIRECT") ? window.top.location.href = j.getResponseHeader("AJAX_REDIRECT_LOCATION") : window.location.href = j.getResponseHeader("AJAX_REDIRECT_LOCATION")); var a = j.responseText; e && (e.innerHTML = ""), overlaySpinner && $("#overlaySpinnerDiv").remove(), inlinePopupTitle && inlinePopupTitleDiv && (inlinePopupTitleDiv.innerHTML = inlinePopupTitle, inlinePopupTitleDiv.style.display = "block"), a = b.appendPerformanceMonitor(a), b.appendTextToDiv(i, a), b.sendGADataIfGAPresent(f, h, g), b.performAjaxOnComplete(c) }, htmlForm) return !1 }, isPageLoadedInIframe: function () { try { return window.self !== window.top } catch (a) { return !0 } }, ajaxInlinePopup: function (a, b, c) { var d = document.getElementById(a) || document.getElementById("shadowedBox"); if (document.getElementById("titlePopupHeader") && (document.getElementById("titlePopupHeader").innerHTML = ""), !d) return void alert("Container not found. Please wait for the page to load"); dataContainer = document.getElementById(c) || document.getElementById("shadowedBoxBody"), dataContainer.innerHTML = "", d.style.direction = "ltr", this.showModal(d.id), this.appendPopupPageLoader(dataContainer.id), this.ajaxRequest({ divID: dataContainer.id, url: b, spinnerDivID: dataContainer.id, autofocus: "true", inlinePopup: !0 }) }, confirmDialogFallBack: function (a, b) { confirm(a) && b() }, confirmFromUser: function (a, b, c, d) { if (!this.isConfirmBoxDisplayable()) return confirmDialogFallBack(a, b), !1; d ? $(".confirm-title").text(d) : $(".confirm-modal-header").hide(), c ? $(".confirm-body-content").html(a) : $(".confirm-body-content").text(a), $(".btn-modal-primary").unbind("click"), $(".btn-modal-primary").on("click", function (a) { if (a.stopPropagation(), $("#confirmDialog").modal("hide"), $("#confirmDialog").data("item-deleted")) return !1; b(), $("#confirmDialog").data("item-deleted", !0) }), $("#confirmDialog").unbind(), $("#confirmDialog").modal(), $("#confirmDialog").on("shown.bs.modal", function (a) { $("body").unbind("click"), $(".btn-yes-cancel-container .btn").first().focus(), $("#confirmDialog").data("item-deleted", !1), $("body").on("click", function (a) { a.stopPropagation(), $("#confirmDialog .modal-dialog").addClass("an-shake"), setTimeout(function () { $("#confirmDialog .modal-dialog").removeClass("an-shake") }, 1e3) }) }).on("hidden.bs.modal", function (a) { $("body").unbind("click") }) }, areAnyOfThePopupsVisible: function () { return !!($("#shadowedBox").hasClass("in") || $("#saveAndContinueDialog").hasClass("in") || $("#confirmDialog").hasClass("in") || $("#requestResponseDialog").hasClass("in")) }, isConfirmBoxDisplayable: function () { return $("#confirmDialog").length > 0 && !this.areAnyOfThePopupsVisible() }, isSaveAndContinueBoxDisplayable: function () { return $("#saveAndContinueDialog").length > 0 && !this.areAnyOfThePopupsVisible() }, saveAndContinueConfirmFromUser: function (a, b, c, d) { if (!this.isConfirmBoxDisplayable()) return confirmDialogFallBack(a, b), !1; $("#saveAndContinueDialog .btn-modal-secondary").html(translatedValidationMessages.systemValidations["application.takesurvey.save.and.continue.later.cancel"]), $("#saveAndContinueDialog .btn-modal-primary").html(translatedValidationMessages.systemValidations["application.takesurvey.save.and.continue.later.continue"]), d ? $(".confirm-title").text(d) : $(".confirm-modal-header").hide(), c ? $(".confirm-body-content").html(a) : $(".confirm-body-content").text(a), $("#saveAndContinueDialog .btn-modal-primary").unbind("click"), $("#saveAndContinueDialog .btn-modal-primary").on("click", function (a) { if (a.stopPropagation(), $("#saveAndContinueDialog").modal("hide"), $("#saveAndContinueDialog").data("item-deleted")) return !1; b(), $("#saveAndContinueDialog").data("item-deleted", !0) }), $("#saveAndContinueDialog").unbind(), $("#saveAndContinueDialog").modal(), $("#saveAndContinueDialog").on("shown.bs.modal", function (a) { $("body").unbind("click"), $(".btn-yes-cancel-container .btn").first().focus(), $("#saveAndContinueDialog").data("item-deleted", !1), $("body").on("click", function (a) { a.stopPropagation(), $("#saveAndContinueDialog .modal-dialog").addClass("an-shake"), setTimeout(function () { $("#saveAndContinueDialog .modal-dialog").removeClass("an-shake") }, 1e3) }) }).on("hidden.bs.modal", function (a) { $("body").unbind("click") }) }, requestResponseFromUser: function (a, b, c, d, e) { if (!this.isConfirmBoxDisplayable()) return confirmDialogFallBack(a, b), !1; if (e) { var f = document.createElement("input"); f.type = "hidden", f.name = "SAVE_AND_CONTINUE", f.value = "true", $("[name=SAVE_AND_CONTINUE]").parents("form").append(f) } $("#requestResponseDialog .btn-modal-secondary").html(translatedValidationMessages.systemValidations["application.takesurvey.request.validation.continue.without.answering"]), $("#requestResponseDialog .btn-modal-primary").html(translatedValidationMessages.systemValidations["application.takesurvey.request.validation.answer.button"]), d ? $(".confirm-title").text(d) : $(".confirm-modal-header").hide(), c ? $(".confirm-body-content").html(a) : $(".confirm-body-content").text(a), $("#requestResponseDialog .btn-modal-secondary").unbind("click"), $("#requestResponseDialog .btn-modal-secondary").on("click", function (a) { if (a.stopPropagation(), $("#requestResponseDialog").modal("hide"), $("#requestResponseDialog").data("item-deleted")) return !1; b(), $("#requestResponseDialog").data("item-deleted", !0) }), $("#requestResponseDialog").unbind(), $("#requestResponseDialog").modal(), $("#requestResponseDialog").on("shown.bs.modal", function (a) { $("body").unbind("click"), $(".btn-yes-cancel-container .btn").first().focus(), $("#requestResponseDialog").data("item-deleted", !1), $("body").on("click", function (a) { a.stopPropagation(), $("input[name='SAVE_AND_CONTINUE']").length > 0 && $("input[name='SAVE_AND_CONTINUE']").remove(), $("#requestResponseDialog .modal-dialog").addClass("an-shake"), setTimeout(function () { $("#requestResponseDialog .modal-dialog").removeClass("an-shake") }, 1e3) }) }).on("hidden.bs.modal", function (a) { $("body").unbind("click") }) }, closeAllPopups: function () { this.closeModalPopupByObj("#lockPopup"), this.closeModalPopupByObj("#shadowedBox") }, showModal: function (a) { this.closeAllPopups(), $(".modal-backdrop").remove(), this.showModalDialog(a) }, showModalDialog: function (a) { $("#" + a).unbind(), qp_sectionDisplayScript.makePopupDraggable(a), $("#" + a).on("hidden.bs.modal", function () { $("#" + a + " .modal-dialog").draggable("destroy"), $("#" + a + " .modal-dialog").css("top", "0px"), $("#" + a + " .modal-dialog").css("left", "0px") }).modal() }, makePopupDraggable: function (a) { $("#" + a + " .modal-dialog").draggable({ handle: "#dragHead" }) }, closeModalPopupByObj: function (a) { $(a).modal("hide") }, updateDragAndDropListHeight: function (a) { $(window).on("load", function () { if ($(window).width() >= 768) { var b = ".drag-drop-question .ui-sortable.first-child.dragAndDrop" + a, c = ".drag-drop-question .ui-sortable.second-child.dragAndDrop" + a; $(b).outerHeight() > $(c).outerHeight() ? ($(b).css("height", $(b).outerHeight()), $(c).css("height", $(b).outerHeight())) : ($(c).css("height", $(c).outerHeight()), $(b).css("height", $(c).outerHeight())) } }) }, dragAndDrop: function (a, b, c) {
        $(".drag-drop-question  .dragAndDrop" + a).sortable({
            connectWith: ".drag-drop-question .dragAndDrop" + a, placeholder: "highlight", helper: "clone", start: function (a, b) { b.item.toggleClass("highlight"), b.placeholder.height(b.helper[0].scrollHeight) }, stop: function (b, c) { dynamicExplodeForDragnDrop(a, c.item.prop("id")), c.item.toggleClass("highlight") }, update: function (b, d) {
                updateHiddenFields(c, a), updateNumber(this, d)
            }, remove: function (c, d) { var e = $("#" + b + a).sortable("toArray"); for (i = 0; i < e.length; i++)$("#" + e[i] + "ID").val("").trigger("change") }
        }), updateHiddenFields = function (a, b) { var c = $("#" + a + b).sortable("toArray"); for (i = 0; i < c.length; i++)$("#" + c[i] + "ID").val(i + 1).trigger("change") }, updateNumber = function (a, b) { var c = ($(b.element).children().index(b.item), $(a).children("li")), d = $(a).parent().find(".first-child > li").length; c.each(function () { var a = ($(this), $(this).index() + 1); $(this).children(".control-number").html(a), $(window).width() < 768 && d > 0 ? $(this).parent(".second-child").css("padding-bottom", "100px") : $(this).parent(".second-child").css("padding-bottom", "0") }) }, dynamicExplodeForDragnDrop = function (a, b) { for (var c = !1, d = $(".drag-drop-question .ui-sortable.second-child.dragAndDrop" + a).prop("children"), e = 0; e < d.length; e++)d[e].id == b && (c = !0); c ? ($("#de_" + a + "_" + b).removeClass("hidden"), $("#de_" + a + "_" + b + " .form-input").focus(), $("#de_" + a + "_" + b + " .form-input").prop("autofocus")) : $("#de_" + a + "_" + b).addClass("hidden") }
    }, detectMatrixScroll: function () { function a() { return $(window).width() > k } function b(a) { var b = /Edge\/|Trident\/|MSIE /.test(window.navigator.userAgent), d = a.clientWidth; b && (d = c(d)), (a.scrollWidth > d && !$(a).parent().hasClass("has-mobile-rendering") || $("input[name=ext_ref][value=test_response]").length > 0 && $(".smartphone", window.parent.document).length > 0) && ($(a).parent().addClass("has-mobile-rendering"), g()) } function c(a) { return a + 2 } function d(a) { a.scrollWidth > a.clientWidth ? ($(a).parent().find(".matrix-mobile-scroll").show(), h()) : $(a).parent().find(".matrix-mobile-scroll").hide() } function e() { $(".matrix-multipoint-question, .matrix-spreadsheet-question, .matrix-sidebyside-question, .flex-matrix-question").find(".table-responsive").hasScrollBar() } function f(a) { return $(".survey-inside-wrapper").is(".has-interactive-mode") ? a.offset().top - parseInt($(window).height()) / 2 + a.parents("tr").outerHeight() / 2 : a.offset().top - 20 } function g() { $(".has-mobile-rendering .this-accordion").unbind("click"), $(".has-mobile-rendering .this-accordion").on("click", function () { $(this).hasClass("option-clicked") ? $(this).parent().hasClass("this-height") || ($(this).parent().addClass("this-height"), $(this).find(".answer-options").addClass("rotate")) : ($(this).parent().toggleClass("this-height"), $(this).find(".answer-options").toggleClass("rotate")); var a = this; setTimeout(function () { $("html, body").animate({ scrollTop: f($(a)) }, 500) }, 500), j() }) } function h() { $(".matrix-mobile-scroll").unbind("click"), $(".matrix-mobile-scroll").unbind("scroll"), $(".matrix-mobile-scroll").on("click", function (a) { a.preventDefault(), $("body").hasClass("language-rtl") ? $(this).siblings(".table-responsive").animate({ scrollLeft: "-=100" }, 200) : $(this).siblings(".table-responsive").animate({ scrollLeft: "+=100" }, 200), $(this).fadeOut() }), $(".table-responsive").scroll(function () { $(this).scrollLeft() >= 10 && $(this).siblings(".matrix-mobile-scroll").fadeOut() }) } function j() { $(".has-mobile-rendering .this-height [type=radio]").unbind("click"), $(".has-mobile-rendering .this-height [type=radio]").on("click", function () { $(this).parents("tr").nextAll("tr[id^=questionRow]").first().find(".this-accordion").length > 0 ? $(this).parents("tr").nextAll("tr[id^=questionRow]").first().find(".this-accordion").addClass("option-clicked").click().removeClass("option-clicked") : $(this).parents("tbody").nextAll("tbody").first().find("tr[id^=questionRow]").first().find(".this-accordion").length > 0 && $(this).parents("tbody").nextAll("tbody").first().find("tr[id^=questionRow]").first().find(".this-accordion").addClass("option-clicked").click().removeClass("option-clicked") }) } var k = $(window).width(); $.fn.hasScrollBar = function () { var c = !1; for (i = 0; i < this.length; i++) { var e = this.get(i); !$(e).parent().hasClass("is-bipolar") && $(e).parent().hasClass("has-mobile-on") ? (a() && $(e).parent().hasClass("has-mobile-rendering") && $(e).parent().removeClass("has-mobile-rendering"), b(e), c = !0) : d(e) } k = $(window).width(), c && j() }, e(), $(window).on("resize", function () { e() }), g() }, setDateBasedOnRespondentsTimezone: function (a, b, c) { var d = jstz.determine(), e = d && d.name(); if ($("[name=respondentTimezone]") && e && $("[name=respondentTimezone]").val(e), c) { var f = this.getLocaleDate(e); f && (this.setCurrentMonthToDate(f, a), $("#dt_day_" + a + "ID") && $("#dt_day_" + a + "ID").selectpicker("val", this.getValueInStringFormat(f.getDate())), $("#dt_year_" + a + "ID") && $("#dt_year_" + a + "ID").selectpicker("val", f.getFullYear()), this.setCurrentHourToDate(f, b, a), $("#dt_min_" + a + "ID") && $("#dt_min_" + a + "ID").selectpicker("val", this.getValueInStringFormat(f.getMinutes())), !b && $("#dt_ampm_" + a + "ID") && $("#dt_ampm_" + a + "ID").selectpicker("val", this.getAMPM(f, b))) } }, setCurrentHourToDate: function (a, b, c) { var d = this.getValueInStringFormat(qp_sectionDisplayScript.getCurrentHour(a, b)); $("#dt_hr_" + c + "ID") && $("#dt_hr_" + c + "ID").selectpicker("val", d) }, setCurrentMonthToDate: function (a, b) { var c = this.getValueInStringFormat(a.getMonth() + 1); $("#dt_month_" + b + "ID") && $("#dt_month_" + b + "ID").selectpicker("val", c) }, getLocaleDate: function (a) { try { var b = (new Date).toLocaleString("en-US", { timeZone: a }), c = new Date(b) } catch (d) { c = new Date } return c }, getCurrentHour: function (a, b) { return 0 !== a.getHours() || b ? !b && a.getHours() > 12 ? a.getHours() - 12 : a.getHours() : 12 }, getAMPM: function (a, b) { return !b && a.getHours() >= 12 ? "p" : "a" }, getValueInStringFormat: function (a) { return a.toLocaleString("en-US", { minimumIntegerDigits: 2, useGrouping: !1 }) }, rangeSlider: function (a) { function b(a) { var b = a.sectionDivID, d = c(b); if ("" !== d) { b += " ." + d; var e = $("#" + b + " .table-heading-wrapper .sh-inner .control-label").length, f = $("#" + a.divID).width(), g = f / (e - 1), h = parseInt(f) + parseInt(g), i = $("#" + b).find(".answer-options").width(); e >= 1 && ($("body").hasClass("language-rtl") ? ($("#" + b + " .table-heading-wrapper .sh-inner").css({ width: "" + h, "padding-right": "0", "margin-left": parseInt(-(g / 2 - 16)), float: "left" }), $("#" + b + ".text-slider-question.is-bipolar .table-heading-wrapper .sh-inner").css({ width: "" + h, "padding-right": "0", "margin-left": parseInt(i - (g / 2 - 16)), float: "left" }), $("#" + b + " .table-heading-wrapper .sh-inner .control-label:first-child").css({ "padding-right": parseInt(g / 2) - 10, "text-align": "right" }), $("#" + b + " .table-heading-wrapper .sh-inner .control-label:last-child").css({ "padding-left": parseInt(g / 2) - 10, "text-align": "left" }), $("#" + b + " .table-heading-wrapper .sh-inner .control-label .error").css("text-align", "center"), $("#" + b + " .table-heading-wrapper .sh-inner .control-label:first-child .error").css("text-align", "right"), $("#" + b + " .table-heading-wrapper .sh-inner .control-label:last-child .error").css("text-align", "left")) : ($("#" + b + " .table-heading-wrapper .sh-inner").css({ width: "" + h, "padding-left": "0", "margin-right": parseInt(-(g / 2 - 16)) }), $("#" + b + ".text-slider-question.is-bipolar .table-heading-wrapper .sh-inner").css({ width: "" + h, "padding-left": "0", "margin-right": parseInt(i - (g / 2 - 16)) }), $("#" + b + " .table-heading-wrapper .sh-inner .control-label:first-child").css("padding-left", parseInt(g / 2) - 10), $("#" + b + " .table-heading-wrapper .sh-inner .control-label:last-child").css("padding-right", parseInt(g / 2) - 10))) } } function c(a) { return $("#" + a + " .answer-container").hasClass("van-westendorp-slider-question") ? "van-westendorp-slider-question" : $("#" + a + " .answer-container").hasClass("text-slider-question") ? "text-slider-question" : $("#" + a + " .answer-container").hasClass("numeric-slider-question") ? "numeric-slider-question" : "" } $("#" + a.divID).slider({ isRTL: a.isRightToLeft, animate: !0, value: a.selectedValue, range: "min", step: a.step, min: a.min, max: a.max, slide: a.slideEvent, create: a.createEvent, change: a.changeEvent, stop: a.stopEvent, start: a.startEvent }), b(a), this.preventSlideOnScrollMobile(a.divID), $(window).on("resize", function () { b(a) }) }, onToggleSliderWithNA: function (a, b, c, d) { var e = $('input[name="u_' + a + '"]:visible'), f = $("#slider_" + a); e.on("change", function () { if (e.prop("checked")) { var g = $('input[name="u_' + a + '"]:hidden'); g.val(b), g.trigger("change"), f.slider({ value: "" }), f.find(".ui-slider-handle").removeClass("is-mid is-positive is-negative"), f.find(".ui-slider-handle").removeClass("is-handle-active"), "true" == d ? $("#sliderDisplayValue_" + a).html("") : $("#sliderDisplayValue_" + a).html(c), f.find(".ui-slider-range, .bipolar-bar span").css("width", "0") } }) }, bipolarSlider: function (a) { $("#" + a.divID).slider({ isRTL: a.isRightToLeft, animate: !0, value: a.selectedValue, step: a.step, min: a.min, max: a.max, slide: a.slideEvent, create: a.createEvent, start: a.startEvent }).append('<div class="bipolar-bar"><div class="bs-min"><span></span></div><div class="bs-max"><span></span></div></div>'), this.initSliderValues(a.selectedValue, a.max, a.divID), $(window).on("resize", function () { qp_sectionDisplayScript.adjustBipolarLabelWidth(a.sectionDivID) }) }, initSliderValues: function (a, b, c) { var d = $("#" + c), e = Math.abs(a) / b * 100; "" != a && (a < 0 && (d.find(".bipolar-bar .bs-min span").css("width", e + "%"), d.find(".bipolar-bar .bs-max span").css("width", "0%"), d.find(".ui-slider-handle").removeClass("is-positive is-mid").addClass("is-negative")), a > 0 && (d.find(".bipolar-bar .bs-max span").css("width", e + "%"), d.find(".bipolar-bar .bs-min span").css("width", "0%"), d.find(".ui-slider-handle").removeClass("is-negative is-mid").addClass("is-positive")), 0 == a && (d.find(".bipolar-bar .bs-max span").css("width", "0%"), d.find(".bipolar-bar .bs-min span").css("width", "0%"), d.find(".ui-slider-handle").removeClass("is-negative is-positive").addClass("is-mid"))) }, adjustBipolarLabelWidth: function (a) { var b = $("#" + a).find(".table-heading-wrapper .sh-inner"), c = ($("#" + a).find(".answer-options:first-child").width(), $("#" + a).find(".ui-slider").outerWidth()), d = b.find(".control-label").length, e = c / (d - 1), f = parseInt(c) + parseInt(e); b.css({ width: "" + f }), b.find(".control-label:first-child").css("padding-left", parseInt(e / 2)), b.find(".control-label:last-child").css("padding-right", parseInt(e / 2)), b.find(".control-label").css("width", parseInt(e)) }, preventSlideOnScrollMobile: function (a) { $(".ui-slider").on("touchstart", function (b) { $(window).scroll(function () { $(window).scrollTop() > 0 && $("#" + a).slider({ disabled: !0 }) }), $("#" + a).slider({ disabled: !1 }) }), $.fn.scrollEnd = function (a, b) { $(this).scroll(function () { var c = $(this); c.data("scrollTimeout") && clearTimeout(c.data("scrollTimeout")), c.data("scrollTimeout", setTimeout(a, b)) }) }, $(window).scrollEnd(function () { $(".ui-slider").each(function (a, b) { var c = $(b).attr("id"); $("#" + c).slider("enable") }) }, 100) }, calculateTotal: function (a, b) { var c = document.forms.run; if (null == c && (c = document.forms[2]), null != c.elements) { var d = 0, e = 0; for (i = 0; i < a.length; i++)c.elements[a[i]] && (val = c.elements[a[i]].value, !isNaN(val) && val.length > 0 && (d += parseFloat(val), e++)); document.getElementById(b).innerHTML = "" + d } }, appendZeros: function (a, b, c, d) { if (a == b) for (i = 0; i < c.length; i++)0 == d.elements[c[i]].value.length && (d.elements[c[i]].value = 0, $(d.elements[c[i]]).trigger("change")) }, runningTotal: function (a, b, c) { var d = document.forms.run; if (null == d && (d = document.forms[2]), null != d.elements) { var e = 0, f = 0; for (i = 0; i < a.length; i++)d.elements[a[i]] && (val = d.elements[a[i]].value, !isNaN(val) && val.length > 0 && (e += parseFloat(val), f++)); if (this.appendZeros(e, c, a, d), f == a.length - 1) for (i = 0; i < a.length; i++)if (d.elements[a[i]] && (val = d.elements[a[i]].value, isNaN(val) || 0 == val.length)) { d.elements[a[i]].value = c - e + "", e = c, $(d.elements[a[i]]).trigger("change"); break } document.getElementById(b).innerHTML = "" + e } }, appendZerosWithoutRunningTotal: function (a, b) { var c = document.forms.run; if (null == c && (c = document.forms[2]), null != c.elements) { var d = 0, e = 0; for (i = 0; i < a.length; i++)c.elements[a[i]] && (val = c.elements[a[i]].value, !isNaN(val) && val.length > 0 && (d += parseFloat(val), e++)); this.appendZeros(d, b, a, c) } }, loadCalendar: function (a) { $("#" + a.divID).bootstrapMaterialDatePicker({ format: a.format, minDate: a.minDate, maxDate: a.maxDate, weekStart: a.weekStart, time: a.time, lang: a.lang, okText: a.okText, cancelText: a.cancelText }) }, reverseYearsListIfDescending: function (a) { $("#" + a.inputFieldID + "_display").on("focus", function () { if ($(this).hasClass("descending")) { var a = $("select.ui-datepicker-year"), b = $(a).children().get(); b.length > 0 && $(b).first().val() < $(b).last().val() && ($(a).empty(), $(a).html(b.reverse())) } }) }, getDateForCalendar: function (a, b) { return void 0 === a || null === a || void 0 === b || null === b || -1 === a || "" === b ? "" : moment(b, "MM/DD/YYYY").toDate() }, loadOldCalendar: function (a, b) { function c() { try { var a = (new Date).toLocaleString("en-US", { timeZone: e }), b = new Date(a) } catch (c) { b = new Date } return b } var d = jstz.determine(), e = d && d.name(); $("[name=respondentTimezone]") && e && $("[name=respondentTimezone]").val(e); var f = { changeMonth: !0, changeYear: !0, minDate: this.getDateForCalendar(a.dateTimeValidationType, a.dateTimeValidationStartDate), maxDate: this.getDateForCalendar(a.dateTimeValidationType, a.dateTimeValidationEndDate), yearRange: a.yearRange, defaultDate: 1 === a.yearSortOrder ? new Date(a.yearRange.split(":")[1], 0, 1) : new Date(a.yearRange.split(":")[0], 0, 1), monthNamesShort: void 0 === $.datepicker.regional[a.languageCode] ? $.datepicker.regional.en.monthNames : $.datepicker.regional[a.languageCode].monthNames, dateFormat: a.dateFormat, altFormat: "MM d yy", showOn: "both", buttonText: '<i class="fa fa-calendar" aria-hidden="true" id="datetimepicker"></i>', isRTL: a.isRTL, beforeShow: function (a) { $(a).css({ position: "relative", "z-index": 999999 }) } }; if ($("#" + a.inputFieldID + "_display").datepicker(f), a.languageCode.length > 0 && $.datepicker.setDefaults($.datepicker.regional[a.languageCode]), $("#" + a.inputFieldID + "_display").change(function () { var b = $("#" + a.inputFieldID + "_display").datepicker("getDate"); $("#" + a.inputFieldID).val($.datepicker.setDefaults($.datepicker.regional.en).formatDate(a.dateFormat, b)), a.languageCode.length > 0 && $.datepicker.setDefaults($.datepicker.regional[a.languageCode]) }), b && c()) { var g = c(), h = new Date(g.getFullYear(), g.getMonth(), g.getDate()); $("#" + a.inputFieldID).val($.datepicker.setDefaults($.datepicker.regional.en).formatDate(a.dateFormat, h)), a.languageCode.length > 0 && $.datepicker.setDefaults($.datepicker.regional[a.languageCode]), $("#" + a.inputFieldID + "_display").val($.datepicker.setDefaults($.datepicker.regional.en).formatDate(a.dateFormat, h)) } if (void 0 != a.selectedDate && a.selectedDate.length > 0 && 3 === a.selectedDate.split(":").length) { var i = a.selectedDate.split(":"); $("#" + a.inputFieldID + "_display").datepicker("setDate", new Date(i[0], i[1], i[2])), $("#" + a.inputFieldID + "_display").change() } this.reverseYearsListIfDescending(a) }, loadAreaRating: function (a, b) { displayAreaRating(a, b, !1) }, loadMap: function (a) { var b = this.getSeriesDataForMapQuestion(a); $("#" + a.containerID).highcharts("Map", { title: { text: "" }, subtitle: { text: "" }, mapNavigation: { enabled: !0, enableMouseWheelZoom: !1 }, zoomType: "xy", legend: { enabled: !1 }, exporting: { enabled: !1 }, credits: { enabled: !1 }, tooltip: { formatter: function () { return "<b>" + this.point.text + "</b><br/>" } }, colorAxis: { min: 0 }, series: b }), this.highlightSelectedRegion(a.selectedID, a.containerID, b) }, getSeriesDataForMapQuestion: function (a) { return [{ data: a.data, allowPointSelect: !0, mapData: Highcharts.maps[a.mapType], joinBy: "hc-key", states: { hover: { color: "#BADA55" }, select: { color: "#BA6A55" } }, point: { events: { click: function (b) { var c = "#" + a.containerID + ' input[name="selectedKey"]', d = $(c).val(), e = "#" + a.containerID + ' input[name="selectedColor"]', f = $(e).val(); $("." + d).length > 0 && ($("." + d).attr("fill", f), $(c).remove(), $(e).remove()), $("#" + a.inputID).val(this.id), $("#" + a.showSelectedID).html("You selected: " + this.text), document.getElementById(a.inputID).checked = !0, $("#" + a.inputID).trigger("change") }, unselect: function (a) { a.preventDefault() } } }, dataLabels: { enabled: !0, format: "{point.code}" } }] }, highlightSelectedRegion: function (a, b, c) { a && "null" != a && c[0].data.forEach(function (c) { c.id == a && ($("#" + b).append("<input type='hidden' name='selectedColor' value='" + $(".highcharts-key-" + c["hc-key"]).attr("fill") + "'/>"), $("#" + b).append("<input type='hidden' name='selectedKey' value='highcharts-key-" + c["hc-key"] + "'/>"), $(".highcharts-key-" + c["hc-key"]).attr("fill", "#BA6A55")) }) }, initDynamicExplode: function () { $(".has-dynamic-explode-radio .radio-check").change(this.dynamicExplodeForRadio), $(".has-dynamic-explode-checkbox .radio-check").change(this.dynamicExplodeForCheckBox), $(".dropdown-question select.has-dynamic-explode-select").change(this.dynamicExplodeForDropDown), $(".matrix-dropdown-question select.has-dynamic-explode-select").change(this.dynamicExplodeForDropDown), $(".rank-order-question  select.has-dynamic-explode-select").change(this.dynamicExplodeForRanOrderDropDown) }, initHideAfterAnsweting: function () { $(".hide-after-answer .radio-check").change(this.hideAfterAnsweringForRadio), $(".hide-after-answer .radio-check").change(this.hideAfterAnsweringForRadioWithDynamicExplode), $(".hide-after-answer .other-option .radio-check").change(this.hideAfterAnsweringForRadioOtherOption), $(".dropdown-question.hide-after-answer select").change(this.hideAfterAnsweringForSelect), $(".dropdown-question.hide-after-answer .has-other select").change(this.hideAfterAnsweringForSelectOtherOption), $(".dropdown-question.hide-after-answer select").change(this.hideAfterAnsweringForSelectWithDynamicExplode) }, dynamicExplodeForRadio: function () { var a = $(this).is(":checked"), b = $(this).prop("value"), c = $(this).prop("name").substring(2); $("[id^=de_" + c + "]").addClass("hidden"), a && ($("#de_" + c + "_" + b).removeClass("hidden"), $("#de_" + c + "_" + b + " .form-input").focus(), $("#de_" + c + "_" + b + " .form-input").prop("autofocus")) }, hideAfterAnsweringForRadio: function () { var a = $(this).is(":checked"), b = $(this).prop("value"), c = $(this).prop("name").substring(2), d = $("#de_" + c + "_" + b).length, e = $(this).parent().parent().hasClass("other-option"); d || e || !a || $("#QuestionSection_" + c).trigger("hideQuestion") }, hideAfterAnsweringForSelect: function () { var a = $(this).prop("value"), b = $(this).prop("name").substring(2), c = $("#de_" + b + "_" + a).length, d = $("#t_" + a + "_ID .form-input.other-input").length; c || d || $(this).find("option:selected").each(function (a, c) { c.value > 0 && $("#QuestionSection_" + b).trigger("hideQuestion") }) }, hideAfterAnsweringForRadioWithDynamicExplode: function () { var a = $(this).is(":checked"), b = $(this).prop("value"), c = $(this).prop("name").substring(2); $("#de_" + c + "_" + b).length && a && $("#de_" + c + "_" + b + " .form-input").on("blur", function () { $("#QuestionSection_" + c).trigger("hideQuestion") }) }, hideAfterAnsweringForRadioOtherOption: function () { var a = $(this).is(":checked"), b = $(this).prop("value"), c = $(this).prop("name").substring(2); $(this).parent().parent().hasClass("other-option") && a && $("#t_" + b + "_ID.form-input.other-input").on("blur", function () { $("#QuestionSection_" + c).trigger("hideQuestion") }) }, hideAfterAnsweringForSelectOtherOption: function () { var a = ($(this).prop("value"), $(this).prop("name").substring(2)); $(this).hasClass("has-other") && $(this).find("option:selected").each(function (b, c) { c.value > 0 && $("#t_" + c.value + "_ID .form-input.other-input").on("blur", function () { $("#QuestionSection_" + a).trigger("hideQuestion") }) }) }, hideAfterAnsweringForSelectWithDynamicExplode: function () { var a = $(this).prop("value"), b = $(this).prop("name").substring(2); $("#de_" + b + "_" + a).length && $(this).find("option:selected").each(function (a, c) { c.value > 0 && $("#de_" + b + "_" + c.value + " .form-input").on("blur", function () { $("#QuestionSection_" + b).trigger("hideQuestion") }) }) }, dynamicExplodeForCheckBox: function () { var a = $(this).is(":checked"), b = $(this).prop("value"), c = $(this).prop("name").substring(2); a ? ($("#de_" + c + "_" + b).removeClass("hidden"), $("#de_" + c + "_" + b + " .form-input").focus(), $("#de_" + c + "_" + b + " .form-input").prop("autofocus")) : $("#de_" + c + "_" + b).addClass("hidden") }, dynamicExplodeForDropDown: function () { var a = $(this).prop("name").substring(2); $("[id^=de_" + a + "]").addClass("hidden"), $(this).find("option:selected").each(function (b, c) { var d = $(c).prop("value"); $("#de_" + a + "_" + d).removeClass("hidden"), $("#de_" + a + "_" + d + " .form-input").focus(), $("#de_" + a + "_" + d + " .form-input").prop("autofocus") }) }, dynamicExplodeForRanOrderDropDown: function () { var a = $(this).prop("name").substring(2), b = $(this).prop("id"), c = b.substring(0, b.indexOf("ID")); $("[id^=de_" + a + "]").addClass("hidden"), $(this).find("option:selected").each(function (b, d) { "" !== $(d).prop("value") ? $("#de_" + a + "_" + c).removeClass("hidden") : $("#de_" + a + "_" + c).addClass("hidden"), $("#de_" + a + "_" + c + " .form-input").focus(), $("#de_" + a + "_" + c + " .form-input").prop("autofocus") }) }, pushToSocial: function (a, b) { $("[name=u_" + a + "]").on("change", function () { $(this).val() >= b ? showDiv("pushToSocialGoodRatingDiv" + a) : hideDiv("pushToSocialGoodRatingDiv" + a) }) }, pushToSocialForNPS: function (a, b) { $("[name=u_" + a + "]").on("change", function () { b.indexOf($(this).val()) > -1 ? showDiv("pushToSocialGoodRatingDiv" + a) : hideDiv("pushToSocialGoodRatingDiv" + a) }) }, isJSON: function (a) { try { JSON.parse(a) } catch (b) { return !1 } return !0 }, printTubePulseDebug: function (debugDivID, answers) { var qid = debugDivID.split("_")[1], inputBox = document.getElementById("p_" + qid + "_json"), ary = eval("(" + inputBox.value + ")"), s = ""; for (i = ary.ratingMap.length - 1; i >= 0; i--)s += '<div class="floatLeft level-table2"><div class="secs">' + ary.ratingMap[i].seconds + " <em>secs</em> : " + (answers.length > 2 ? answers[ary.ratingMap[i].rating] : ary.ratingMap[i].rating) + '</div><div class="comment">' + ary.ratingMap[i].comment + "</div></div>"; document.getElementById(debugDivID).innerHTML = s }, heatMapPhotoTagger: function (a) { $("#" + a.divID).photoTagger({ isTagCreationEnabled: !0, isTagDeletionEnabled: !0, tagsBorderColor: a.tagsBorderColor, dummyzWidth: a.dummyzWidth, dummyzHeight: a.dummyzHeight, confirmationMessage: a.confirmationMessage }) }, hotSpot: function (a) { $("#" + a.divID).hotSpot({ isTagCreationEnabled: !1, isTagDeletionEnabled: !1, isSurveying: !0, tagsBorderColor: a.tagsBorderColor }) }, recordTubePulse: function (a) { var b = a.inputBox, c = this.isJSON(b.value) ? JSON.parse(b.value) : {}, d = this.isJSON(b.value) ? JSON.parse(b.value).ratingMap : [], e = a.duration, f = null != a.commentObj ? a.commentObj.value : "", g = a.ratingObj.value; c.duration = e, c.ratingMap = d; var d = c.ratingMap, h = !0; d.length > 0 ? d.forEach(function (b) { b.seconds == a.seconds && (h = !1) }) : h = !0, h && d.push({ seconds: a.seconds, rating: g, comment: f }), b.value = JSON.stringify(c) }, loadScript: function (a, b) { loadedScripts[a] ? b && b() : jQuery.ajax({ async: !1, url: a, dataType: "script", cache: !0 }).done(function () { loadedScripts[a] = !0, b && b() }).fail(function (b, c, d) { console.log("load script failed for " + a + " and the exception is : " + d) }) }, scrollToTop: function () { $("html, body").animate({ scrollTop: 0 }, 0) }, submitSaveAndContinue: function (a, b, c) { return qp_validateSaveAndContinue() && (this.appendLoader(a), this.submitForm(b, c)), !1 }, signupForFree: function (a) { return qp_validateSignupForFree() && $(a).submit(), !1 }, showEmailRewardForm: function (a, b) { this.appendLoader(a), this.submitForm(b) }, submitEmailRewardForm: function (a, b) { qp_validateSaveAndContinue() && (this.appendLoader(a), this.submitForm(b)) }, appendLoader: function (a) { if ($(a).length) { $(a).append('<div class="qp-loader"><span></span><span></span><span></span><span></span></div>'), $(a).addClass("has-loader") } }, onSuccessfulValidation: function (a, b, c) { this.appendLoader(a), this.submitForm(b, c), this.setFormSubmissionHistory($("#runForm"), c, b, function () { scrollToTop("body", 0) }), suspendPageTimerIfPresent() }, isSkipValidation: function () { return $('#runForm input[type="hidden"][name="skipJSValidationInput"]').length > 0 && "true" == $('#runForm input[type="hidden"][name="skipJSValidationInput"]').prop("value") }, validateAndSubmit: function (a, b, c) { switch (qp_validateSurvey(qp_sections, qp_sectionDisplayScript.onSuccessfulValidation.bind(this, a, b, c))) { case 0: this.onSuccessfulValidation(a, b, c); break; case 1: this.updateValidationErrorCountService(c, b) } }, submitSurvey: function (a, b, c) { return this.isSkipValidation() ? this.onSuccessfulValidation(a, b, c) : this.validateAndSubmit(a, b, c), !1 }, updateValidationErrorCountService: function (a, b) { $.ajax({ url: "/a/TakeSurveyStats?tt=" + a + "&" + b + "=false", type: "get", htmlForm: document.getElementById("runForm"), dataType: "html", success: function (a) { console.log("Validation Error count updated") }, failure: function (a) { console.error("Validation Error count update failed") } }) }, goBackToSurveyPreviousPage: function (a) { var b = a + "&ajax=true"; this.appendLoader($(".survey-submit-wrapper .btn-back")), this.ajaxSubmitFormObject("ajaxContainerDiv", b, $("#runForm")[0]), this.setBrowserHistory($("#runForm").serialize(), a) }, submitForm: function (a, b, c) { var d = this; $("#SurveySubmitButtonElement").prop("disabled", !0), d.ajaxRequest({ divID: "ajaxContainerDiv", url: $("#runForm").attr("action"), spinnerDivID: "spinnerDiv", inlinePopup: !0, htmlForm: document.getElementById("runForm"), onajaxcomplete: function () { d.scrollToTop("ajaxContainerDiv"), $("#spinnerDiv").css("display", "none"), c && c() } }) }, skipAndSubmitPage: function (a, b) { var c = $("<input>").attr("type", "hidden").attr("name", "skip").val("true"); return $("#runForm").append(c), this.submitStartPages(a, b) }, appendPageLoader: function () { $("#ajaxContainerDiv").append('<div class="qp-loader fixed"><span></span><span></span><span></span><span></span></div>') }, appendPopupPageLoader: function (a) { $("#" + a).html('<div class="qp-loader"><span></span><span></span><span></span><span></span></div>') }, confirmedToDelete: function (rowID, url, identifierValue) { var r = this.getAjaxRequestFinal(url, $("#" + rowID), !0); r.onreadystatechange = function () { if (4 == r.readyState) { $("#" + rowID).remove(); var responseText = r.responseText; if (responseText.indexOf("ajax-performance-monitor") > 0) { var originalResponseText = responseText; try { var ary = responseText.split("<ajax-performance-monitor>"); responseText = ary[0], $("#performanceMonitorID").html(ary[1].split("</ajax-performance-monitor>")[0]) } catch (e) { responseText = originalResponseText } } if (responseText.indexOf("ajax-eval-code") > 0) { var ary = responseText.split("<ajax-eval-code>"); $("#" + rowID).html(ary[0]), eval(ary[1].split("</ajax-eval-code>")[0]) } else responseText.indexOf("//JavaScript") > 0 && eval(responseText) } }, statusSpan = document.getElementById("status_" + identifierValue), statusSpan && (statusSpan.innerHTML = '<div style="padding:10px;" align="center"><img src="/images/waiting.gif"></div>') }, submitLanguagePage: function (a, b) { return this.appendPageLoader(), this.submitForm(a, b), this.setFormSubmissionHistory($("#runForm"), b, a), !1 }, submitAuthStartPages: function (a, b) { return $("#SurveySubmitButtonElement").length > 0 && this.appendLoader($("#SurveySubmitButtonElement")), this.submitStartPages(a, b) }, submitStartPages: function (a, b) { return this.submitForm(a, b), this.setFormSubmissionHistory($("#runForm"), b, a), !1 }, setFormSubmissionHistory: function (a, b, c) { var d = $(a).attr("action") + "?tt=" + b + "&" + c + "=false"; this.setBrowserHistory($(a).serialize(), d) }, setBrowserHistory: function (a, b) { History.replaceState(a, document.title, b) }, signaturePad: function (a) { function b() { c.width = c.offsetWidth, c.height = c.offsetHeight } var c = document.getElementById("smoothed" + a.qID); window.addEventListener("orientationchange", function (a) { d.clear(), b() }), b(); var d = new SignaturePad(document.getElementById("smoothed" + a.qID), { minWidth: 1, maxWidth: 2, penColor: "rgb(84, 94, 107)" }); $("#" + a.divID).on("mouseup touchend", function () { $("#" + a.hiddenFieldID).val(d.toDataURL()).trigger("change") }), $("#" + a.clearLinkID).on("click", function () { d.clear(), $("#" + a.hiddenFieldID).val() }) }, maxDiff: function (a, b, c, d) { $("#" + a).change(function () { $('[name="' + b + '"]').attr("disabled", !1), $("#element_" + c).length && (d > 2 ? $("#element_" + c).attr("disabled", !0) : $("#element_" + c).prop("checked", !1)) }) }, hideVisibility: function (a) { obj = $("#" + a), obj.length > 0 && !obj.hasClass("hidden") && obj.addClass("hidden") }, showVisibility: function (a) { obj = $("#" + a), obj.length > 0 && obj.hasClass("hidden") && obj.removeClass("hidden") }, initSurveyTimer: function (a) { function b(a) { var b = $(".ts-survey-timer"); !b.hasClass("is-alert") && a <= 3e4 && b.addClass("is-alert") } this.isToSuspend = !1, loadedTimers.length > 0 && (loadedTimers[0].suspend(), loadedTimers = []), this.countDown = function (a) { if (!this.isToSuspend) if (a >= 0) { setTimeDisplay(getTimeStr(a, !1), !1), b(a); var c = this; 0 === loadedTimers.length && (loadedTimers[0] = c); var d = function () { qp_sectionDisplayScript.areAnyOfThePopupsVisible() ? c.countDown(a) : c.countDown(a - 1e3) }; this.oncountdown && this.oncountdown(a), setTimeout(d, 1e3) } else setTimeDisplay("00 00 00 00", !1), this.onfinish && this.onfinish() }, this.suspend = function () { this.isToSuspend = !0 }, this.onfinish = function () { var b = document.forms.runForm; a.isTerminateSurveyOnTimeOut && (b.elements[a.actionHookRequestName].value = a.actionHookGoToThankYou), addSkipJSValidationInput(b) }, this.oncountdown = function (a) { document.cookie = "Survey_countdown_ms=" + a + ";path=/;" } }, initPageTimer: function (a) { function b(a) { if (a <= 30) { var b = $("#pt-extend-timer"); b.length && (b.removeClass("hidden"), $("#pt-title").addClass("hidden")) } } this.isToSuspend = !1, suspendPageTimerIfPresent(), this.getCountDownFunction = function (a, b) { return function () { if (qp_sectionDisplayScript.areAnyOfThePopupsVisible()) a.countDown(b); else { var c = $("#pt-extend-timer-value"); c.length && parseInt(c.val()) > 0 ? (a.countDown(b + parseInt(c.val()) - 1), c.remove()) : a.countDown(b - 1) } } }, this.getCountUpFunction = function (a, b) { return function () { qp_sectionDisplayScript.areAnyOfThePopupsVisible() ? a.countUp(b) : (a.countUp(b + 1), $("#currentPageTimer").val(b + 1)) } }, this.countDown = function (a) { if (!this.isToSuspend) if (a >= 0) { setTimeDisplay(getTimeStr(a, !0), !0), b(a); var c = this; 0 === loadedPageTimers.length && (loadedPageTimers[0] = c); var d = this.getCountDownFunction(c, a); this.oncountdown && this.oncountdown(a), setTimeout(d, 1e3) } else setTimeDisplay("00 00 00 00", !0), this.onfinish && this.onfinish() }, this.countUp = function (a) { if (!this.isToSuspend && a >= 0) { var b = this, c = this.getCountUpFunction(b, a); setTimeout(c, 1e3) } }, this.suspend = function () { this.isToSuspend = !0 }, this.onfinish = function () { var b = document.forms.runForm; a.isTerminateSurveyOnTimeOut && (b.elements[a.actionHookRequestName].value = a.actionHookGoToThankYou), a.doNothingEnabled || addSkipJSValidationInput(b) }, this.oncountdown = function (b) { document.cookie = "page_timer_" + a.timerQuestionID + "=" + b + ";path=/;", $("#countDownTimer").val(a.maxTime - b), document.getElementsByName(a.answerElementName)[0] && (document.getElementsByName(a.answerElementName)[0].value = $("input[name=pageFirstClick]").val() + "_" + $("input[name=pageLastClick]").val() + "_" + $("input[name=countDownTimer]").val() + "_" + $("input[name=pageNumClicks]").val()), a.timeLeft - b > a.minTime && $("#SurveySubmitButtonElement").attr("disabled", !1) }, a.minTime > 0 && $("#SurveySubmitButtonElement").attr("disabled", !0) }, initOnWindowScrollFixTimer: function () { var a = $(".survey-timer-wrapper").position().top, b = $(window); b.on("scroll", function (c) { b.scrollTop() > a && b.find(".survey-timer-wrapper") ? ($(".survey-timer-wrapper").addClass("this-fixed"), $(".survey-body-wrapper").removeClass("has-timer")) : ($(".survey-timer-wrapper").removeClass("this-fixed"), $(".survey-body-wrapper").addClass("has-timer")) }) }, getCookie: function (a) { for (var b = a + "=", c = document.cookie.split(";"), d = 0; d < c.length; d++) { for (var e = c[d]; " " == e.charAt(0);)e = e.substring(1, e.length); if (0 == e.indexOf(b)) return e.substring(b.length, e.length) } return null }, initTextBoxPlaceholders: function () { $(".form-type-question .form-input, .matrix-spreadsheet-question .form-input").each(function () { checkForInputPlaceholder(this) }), $(".form-type-question .form-input, .matrix-spreadsheet-question .form-input").on("change keyup", function () { checkForInputPlaceholder(this) }) }, clearOTPFieldByName: function (a) { $(".els-verify-code .input-wrapper input[name=" + a + "]").val("") }, clearAllOTPFields: function () { this.clearOTPFieldByName("digit1"), this.clearOTPFieldByName("digit2"), this.clearOTPFieldByName("digit3"), this.clearOTPFieldByName("digit4") }, initTextBoxPlaceholdersElectronicSignature: function (a, b) {
        function c(a, b, c) { if (f()) { var d = ""; $("input[name^='digit']").each(function () { d += "" + $(this).val() }), qp_sectionDisplayScript.verifyCode(a, b, d) } else c.preventDefault(), c.stopPropagation() } function d(a) { $(a).val().length > 0 ? $(a).addClass("used") : $(a).removeClass("used") } function e(a) { return "" != $(".els-verify-code .input-wrapper input[name=" + a + "]").val() } function f() { return e("digit1") && e("digit2") && e("digit3") && e("digit4") } function g() { f() ? $(".els-verify-code .verify-btn").css("visibility", "visible") : $(".els-verify-code .verify-btn").css("visibility", "hidden") } $(".survey-submit-wrapper").toggle(), $(".els-verify-code .input-wrapper input").on("change keyup", function (d) {
            if (key = d.which || d.keyCode || d.charCode,
                13 == key) c(a, b, d); else if ("digit1" == d.target.attributes.name.value || 8 != key && 37 != key) if (39 == key) { var e = $("input").index(this) + 1, f = $("input").eq(e); f.focus() } else { if ("" === d.target.value) return void g(); if ($("#errorSpan").html(""), 37 != key && 38 != key && 40 != key) { var e = $("input").index(this) + 1, f = $("input").eq(e); f.focus() } } else { var h = $("input").index(this) - 1, i = $("input").eq(h); i.focus() } g()
        }), $(".els-signature-sec .agree-option .radio-check").click(function () { $(".survey-submit-wrapper").toggle() }), $(".form-type-question .form-input").each(function () { d(this) }), $(".form-type-question .form-input").on("change keyup", function () { d(this) }); var h = null; $(".els-verify-email .input-wrapper input").on("change keyup", function () { var a = !1; $(".els-verify-email .input-wrapper input[name^='t_']").each(function () { var b = $(this); "" == b.val() && (a = !0), h = b }), a ? $(".els-verify-email .verify-btn").css("visibility", "hidden") : validateEmail(h.val()) ? $(".els-verify-email .verify-btn").css("visibility", "visible") : $(".els-verify-email .verify-btn").css("visibility", "hidden") })
    }, stopEnterSubmit: function (a) { $(a).keydown(function (a) { if (13 === a.keyCode) return a.preventDefault(), a.stopPropagation(), !1 }) }, validateTextAgainstPattern: function (a, b, c) { function d(a) { var b = f(a.questionID, a.messageKey, a.replacements); return null !== b && void 0 !== b || (b = e(a.messageKey, a.replacements)), b } function e(a, b) { return replaceValues(translatedValidationMessages.systemValidations[a], b) } function f(a, b, c) { var d = translatedValidationMessages.customValidations[a]; if (d) { var e = d[b]; if (null !== e || void 0 !== e) return replaceValues(e, c) } return null } $(a).blur(function () { var a = new RegExp(b), e = a.test(this.value), f = { questionID: c, messageKey: "application.takesurvey.validation.contact.info.custom.field.regex.validation.failure", replacements: [] }, g = d(f); if (0 !== this.value.trim().length && !e) { var h = $("[id^=errorSpan_" + c + "]"); return h.html(g).removeClass("hidden vhidden"), !1 } var h = $("[id^=errorSpan_" + c + "]"); return h.html("").addClass("hidden vhidden"), !0 }) }, initBootStrapDropDown: function (a) { $(".qp-list-container#" + $(a).attr("id") + "-list").remove(), $(a).selectpicker({ noneSelectedText: translatedValidationMessages.systemValidations["application.takesurvey.multi.select.none.selected"] }), $(a).prop("multiple") ? $(a).parent().addClass("multi-select") : $(a).parent().addClass("single-select") }, highLightAnswerOptions: function () { $(window).keydown(function (a) { 9 === a.keyCode && ($(".radio-check").on("focus", function () { $(this).parent(".control-selection").addClass("has-focus") }).on("blur", function () { $(".control-selection").removeClass("has-focus") }), $(".form-select .dropdown-toggle").on("focus", function () { $(this).parents(".select-wrapper, .control-selection").addClass("has-focus") }).on("blur", function () { $(".select-wrapper, .control-selection").removeClass("has-focus") })) }) }, verifyMobile: function (a) { var b = $("#" + a.countryCodeFieldID).val() + "-" + $("#" + a.phoneFieldID).val(), c = $("#" + a.emailFieldID).val(), d = "errorSpan_" + a.phoneQuestionID, e = "/a/takeSurveyVerifyMobile.do?mobileNumber=" + b + "&emailAddress=" + c + "&panelID=" + a.panelID + "&phoneQuestionID=" + a.phoneQuestionID; this.ajaxLink(d, e) }, getUSPhoneNoInputValidation: function (a) { $("#" + a).usPhoneFormat() }, refreshSession: function () { qp_sectionDisplayScript.ajaxRequest({ divID: "refreshSessionDiv", url: "/a/RefreshSession", silent: !0 }) }, resetDateIfMonthChanged: function (a, b) { $("#dt_month_" + a + "ID").on("change", function () { $("#dt_day_" + a + "ID").val(b) }) }, showHideForNPSPlusSubQuestion: function () { function a() { var a = {}; return 0 == $(".answer-container.word-cloud-question").find(".word-cloud-wrapper:not('.hidden')").length ? (a.id = $(".answer-container.word-cloud-question").find(".word-cloud-wrapper").find(".answer-options.other-option .other-input").attr("id"), a.name = $(".answer-container.word-cloud-question").find(".word-cloud-wrapper").find(".answer-options.other-option .other-input").attr("name")) : (a.id = $(".answer-container.word-cloud-question").find(".word-cloud-wrapper:not('.hidden') .answer-options.other-option .other-input").attr("id"), a.name = $(".answer-container.word-cloud-question").find(".word-cloud-wrapper:not('.hidden') .answer-options.other-option .other-input").attr("name")), a } function b(a, b) { $(".answer-container.word-cloud-question").parent().find(".question-container, .word-cloud-wrapper").filter("[data-score='" + a + "']").removeClass("hidden"), $(".answer-container.word-cloud-question").parent().find(".question-container, .word-cloud-wrapper").filter("[data-score='" + a + "']").find(".answer-options.other-option .other-input").attr("name", b.name), $(".answer-container.word-cloud-question").parent().find(".question-container, .word-cloud-wrapper").filter("[data-score='" + a + "']").find(".answer-options.other-option .other-input").attr("id", b.id), $(".answer-container.word-cloud-question").parent().find("[name^=answerCategory]").val(c(a)) } function c(a) { return "npsPlusDetractor" === a ? 11 : "npsPlusPassive" === a ? 12 : "npsPlusPromoter" === a ? 13 : void 0 } $(".nps-plus-question > .answer-options:first-child .control-label-nps").each(function () { $(this).position({ my: "bottom", at: "bottom", of: ".nps-plus-question" }) }), setTimeout(function () { $(".word-cloud-question").siblings(".ok-wrapper").unbind("click"), $(".word-cloud-question").siblings(".ok-wrapper").on("click", function () { $(".answer-container.comments-suggestions-question").parents(".survey-question-wrapper").removeClass("hidden") }) }, 1), $(".nps-plus-question > .answer-options:first-child .control-selection").on("click", function () { var c = $(this).attr("data-score"); $(".answer-container.word-cloud-question").parent().removeClass("has-separator"); var d = a(); $(".answer-container.word-cloud-question").parent().find(".question-container, .word-cloud-wrapper").filter("[data-score='" + c + "'].hidden").length > 0 && ($(".answer-container.word-cloud-question").find(".word-cloud-wrapper").find(".answer-options.other-option .other-input").removeAttr("id").removeAttr("name"), $(".answer-container.word-cloud-question").parent().find(".question-container").addClass("hidden"), $(".answer-container.word-cloud-question").find(".word-cloud-wrapper").addClass("hidden"), $(".answer-container.word-cloud-question").find(".word-cloud-wrapper input.radio-check").prop("checked", !1), b(c, d)), $(".answer-container.word-cloud-question").parents(".survey-question-wrapper").removeClass("hidden") }), $(".word-cloud-question .control-selection").on("click", function () { $(".answer-container.comments-suggestions-question").parents(".survey-question-wrapper").removeClass("hidden") }) }, closedCardSorting: function (a, b, c) { $(".card-sorting-question.is-close-ended .closedCardSorting" + a).sortable({ connectWith: ".card-sorting-question.is-close-ended .closedCardSorting" + a, placeholder: "highlight", helper: "clone", delay: 100, appendTo: ".card-sorting-question .answer-options .closedCardSorting" + a, start: function (a, b) { b.item.toggleClass("highlight"), b.placeholder.height(b.helper[0].scrollHeight) }, stop: function (a, b) { b.item.toggleClass("highlight") }, update: function (b, c) { var f = b.target.id; d(f, a), e(this, c); $(c.element).children().index(c.item); $lis = $(this).children("li"), $count = $(this).children("li").length, $lis.each(function () { var a = $(this).index() + 1; $(this).children(".control-number").html(a), $(this).parents(".sortable-loop-wrapper").find(".this-head-count").html(a) }), $lis.length < 1 && ($(this).parents(".sortable-loop-wrapper").find(".remove-sortable").show(), $(this).parents(".sortable-loop-wrapper").find(".this-head-count").hide()), 0 < $lis.length && ($(this).parents(".sortable-loop-wrapper").find(".remove-sortable").hide(), $(this).parents(".sortable-loop-wrapper").find(".this-head-count").show()) }, remove: function (c, d) { var e = $("#" + b + a).sortable("toArray"); for (i = 0; i < e.length; i++)$("#" + e[i] + "ID").val("").trigger("change") }, over: function (a, b) { $(a.target).parent().addClass("temp-highlight") }, out: function (a, b) { $(a.target).parent().removeClass("temp-highlight") } }); var d = function (a, b) { var c = $("#" + a).sortable("toArray"); for (i = 0; i < c.length; i++) { var d = a != b ? i + 1 + "-" + a : ""; $("#" + c[i] + "ID").val(d).trigger("change") } }, e = function (a, b) { var c = ($(b.element).children().index(b.item), $(a).children("li")), d = $(a).parent().find(".first-child > li").length; c.each(function () { var a = ($(this), $(this).index() + 1); $(this).children(".control-number").html(a), $(window).width() < 768 && d > 0 ? $(this).parent(".second-child").css("padding-bottom", "100px") : $(this).parent(".second-child").css("padding-bottom", "0") }) } }, initUiSortable: function (a, b, c, d) { a.sortable({ connectWith: $(c).find(".openCardSorting" + d), placeholder: "highlight", helper: "clone", delay: 100, appendTo: b, start: function (a, b) { b.item.toggleClass("highlight"), b.placeholder.height(b.helper[0].scrollHeight) }, stop: function (a, b) { b.item.toggleClass("highlight") }, update: function (a, b) { var c = a.target.id; e(this, c, d), $lis = $(this).children("li"), $count = $(this).children("li").length, $lis.each(function () { var a = $(this).index() + 1; $(this).children(".control-number").html(a), $(this).parents(".sortable-loop-wrapper").find(".this-head-count").html(a) }), $lis.length < 1 && ($(this).parents(".sortable-loop-wrapper").find(".remove-sortable").show(), $(this).parents(".sortable-loop-wrapper").find(".this-head-count, .is-accordion").hide()), 0 < $lis.length && ($(this).parents(".sortable-loop-wrapper").find(".remove-sortable").hide(), $(this).parents(".sortable-loop-wrapper").find(".this-head-count, .is-accordion").show()) }, remove: function (a, b) { var c = $("#" + d).sortable("toArray"); for (i = 0; i < c.length; i++)$("#" + c[i] + "ID").val("").trigger("change") }, over: function (a, b) { $(a.target).parent().addClass("temp-highlight") }, out: function (a, b) { $(a.target).parent().removeClass("temp-highlight") } }); var e = function (a, b, c) { var d = $(a).sortable("toArray"); for (i = 0; i < d.length; i++) { var e = a.parentElement.getElementsByTagName("input")[0].value, f = c != b ? i + 1 + "-" + e : ""; $("#" + d[i] + "ID").val(f).trigger("change") } } }, textHighlighter: function (a, b) { $(".text-highlighter-question-" + a).each(function () { function c() { if (b && 0 !== Object.keys(b).length) for (B.removeClass("hidden"), x = 0; x < b.length; x++) { var a = b[x], c = f(); g(c, a); var d = v.find('li[data-answer="' + a.answerID + '"] > .color-circle').css("background-color"); q(d, a.startIndex, a.endIndex) } } function d() { $("#color-option-popup-hidden-question-" + a).html("") } function e() { var a = f(), b = u.find(".th-highlight.is-temp"); g(a, { answerID: w.find(".color-circle.is-active").parent().attr("data-answer"), comment: A.val() || "", startIndex: o(b[0]), endIndex: o(b[b.length - 1]) }) } function f() { return 1 + (C.find("input[type='hidden']").length / 4 >> 0) } function g(a, b) { $(C).append(h(a, "answerID", b.answerID)), $(C).append(h(a, "comment", b.comment)), $(C).append(h(a, "startIndex", b.startIndex)), $(C).append(h(a, "endIndex", b.endIndex)) } function h(a, b, c) { return '<input type="hidden" name="' + i(a, b) + '" value="' + c + '">' } function i(b, c) { return "th_" + a + "_" + b + "_" + c } function j() { var a = ""; if (void 0 !== window.getSelection && "" !== window.getSelection().toString()) { var b = window.getSelection(); if (b.rangeCount) { var c = []; if (b.getRangeAt(0).cloneContents().childNodes.length > 0) for (var d = 0; d < b.getRangeAt(0).cloneContents().childNodes.length; d++)if ($(b.getRangeAt(0).cloneContents().childNodes[d]).hasClass("answer-container") && " " != b.getRangeAt(0).cloneContents().childNodes[d].textContent) for (var e = 0; e < b.getRangeAt(0).cloneContents().childNodes[d].childNodes.length; e++)c.push(b.getRangeAt(0).cloneContents().childNodes[d].childNodes[e]); else $(b.getRangeAt(0).cloneContents().childNodes[d]).hasClass("qp-th-node") && " " != b.getRangeAt(0).cloneContents().childNodes[d].textContent && c.push(b.getRangeAt(0).cloneContents().childNodes[d]); else c.push(b.getRangeAt(0).commonAncestorContainer.parentElement); return c } } else void 0 !== document.selection && "Text" == document.selection.type && "" !== document.selection.createRange().htmlText && (a = document.selection.createRange().htmlText); return a } function k() { v.is(".hidden") || v.addClass("hidden").removeAttr("style") } function l(a) { return a = a.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i), a && 4 === a.length ? "#" + ("0" + parseInt(a[1], 10).toString(16)).slice(-2) + ("0" + parseInt(a[2], 10).toString(16)).slice(-2) + ("0" + parseInt(a[3], 10).toString(16)).slice(-2) : "" } function m(a) { return "#" === a.slice(0, 1) && (a = a.slice(1)), 3 === a.length && (a = a.split("").map(function (a) { return a + a }).join("")), (299 * parseInt(a.substr(0, 2), 16) + 587 * parseInt(a.substr(2, 2), 16) + 114 * parseInt(a.substr(4, 2), 16)) / 1e3 >= 128 ? "#252525" : "#EFEFEF" } function n(a) { return a.children(":first.th-highlight").length > 0 ? n(a.children(":first.th-highlight")) : a } function o(a) { return $(a).hasClass("th-highlight") ? $(a).parents(".qp-th-node").attr("data-index") : $(a).attr("data-index") } function p(a, b) { for (var c = l(a), d = 0; d < b.length; d++) { var e = n(u.find("[data-index=" + o(b[d]) + "]")), f = '<span class="th-highlight is-temp" style="background-color:' + a + "; opacity:0.70; color:" + m(c) + '">' + e.html() + "</span>"; e.html(f) } } function q(a, b, c) { for (var d = l(a), e = b; e <= c; e++) { var f = n(u.find("[data-index=" + e + "]")), g = '<span class="th-highlight" style="background-color:' + a + "; color:" + m(d) + '">' + f.html() + "</span>"; f.html(g) } } function s() { var a = j(); if ("" != a) { if (w.find(".color-circle").removeClass("is-active"), v.removeClass("hidden"), $(window).width() >= 992) { var b = n(u.find("[data-index=" + o(a[0]) + "]")); v.css({ top: 0, left: 0 }); var c = new $.PositionCalculator({ item: v, target: b, itemAt: "top left", itemOffset: { y: 3, x: 0, mirror: !0 }, targetAt: "bottom left", flip: "both" }), d = c.calculate(); v.css({ top: d.moveBy.y + "px", left: d.moveBy.x + "px" }) } w.each(function () { $(this).on("click", function (b) { u.find(".th-highlight.is-temp").contents().unwrap(), $(this).find(".color-circle").addClass("is-active"), p($(this).find(".color-circle.is-active").css("background-color"), a), r = -1 }) }), v.on("click keyup keydown touchend touchstart textarea", function (a) { a.stopPropagation(), r = -1 }), A.on("click keyup keydown touchend touchstart focus", function (a) { a.stopPropagation(), r = -1 }), z.on("click", function () { u.find(".th-highlight").hasClass("is-temp") && (e(), k(), A.val(""), u.find(".th-highlight").removeClass("is-temp"), B.removeClass("hidden")) }), y.on("click", function () { k(), u.find(".th-highlight.is-temp").contents().unwrap() }) } } function t() { r && clearTimeout(r), r = -1 != r && setTimeout(function () { $(u).trigger("selectionEnd") }, 1e3) } for (var u = $(this), v = u.parent().find(".qp-ts-highlighter-popover"), w = v.find("li"), y = v.find(".secondary-btn"), z = v.find(".primary-btn"), A = u.parent().find(".input-wrapper > .form-input"), B = u.parent().find(".qp-ts-reset-highlight > a"), C = $("#color-option-popup-hidden-question-" + a), D = u.html().replace(/\s*<\s*br\s*(\/?)\s*>\s*/gi, "<br/> ").split(/\s+/), E = 0, F = D.length; E < F; E++)D[E] = '<span class="qp-th-node th-n-' + E + '" data-index="' + E + '">' + D[E] + " </span>"; u.html(D.join(" ")), c(), u.on("mouseup", function () { s() }), u.off("touchstart").on("touchstart", function () { r = null, document.onselectionchange = t }), $(u).on("selectionEnd", function (a) { s() }), B.on("click", function () { u.find(".th-highlight").contents().unwrap(), $(this).addClass("hidden"), d() }) }) }, gaborGranger: function () { $(".gabor-granger-question .answer-price-option").css("transform", "scale(1.1)"), setTimeout(function () { $(".gabor-granger-question .answer-price-option").css("transform", "scale(1)") }, 500) }, openCardSorting: function (a, b, c) { function d() { var a = j.clone().removeClass("this-sortable-clone").addClass("cont-" + i).show(), b = e.find(".ui-sortable-main"); a.appendTo(b).find(".form-input").focus() } touchPunchDelay = 100, $(document).on("click", ".is-accordion", function () { var a = $(this); a.parent().next().hasClass("this-active") ? (a.parent().next().removeClass("this-active"), a.parent().next().slideDown(350)) : (a.parent().parent().find("ul").removeClass("this-active"), a.parent().parent().find("ul").slideUp(350), a.parent().next().toggleClass("this-active"), a.parent().next().slideToggle(350)), a.text("unfold_more" == a.text() ? "unfold_less" : "unfold_more") }).on("click", ".remove-sortable", function () { $(this).parents(".sortable-loop-wrapper").remove() }); var e = $("#QuestionSection_" + a + " .card-sorting-question"), f = e.find(".answer-options"), g = e.find(".openCardSorting" + a), h = e.find("h2"), i = b; if (qp_sectionDisplayScript.initUiSortable(g, f, e, a), $(window).width() < 768 && e.hasClass("is-close-ended") && h.next().addClass("this-active"), e.hasClass("is-open-ended")) { var j = e.find(".clone-div-" + a), k = e.find(".add-sortable-wrapper"); k.unbind("click"), k.droppable({ accept: "#" + e.parents(".survey-question-wrapper").attr("id") + " .ui-sortable-handle", drop: function (b, g) { d(), g.helper.attr("style", ""); var h = $(g.helper).clone(); h.appendTo("#" + e.parents(".survey-question-wrapper").attr("id") + " .is-open-ended .ui-sortable-container .sortable-loop-wrapper.cont-" + i + " .ui-sortable"), h.removeClass("ui-sortable-helper"), h.parents(".sortable-loop-wrapper").find(".this-head-count").show(), h.parents(".sortable-loop-wrapper").find(".remove-sortable").hide(), $(g.draggable).remove(), qp_sectionDisplayScript.initUiSortable(e.find(".openCardSorting" + a), f, e, a); var j = h.parents(".sortable-loop-wrapper").find("input")[0]; h.find(".control-number").html(1), qp_sectionDisplayScript.openCardSortingLookUp(j, a, c), i += 1, qp_sectionDisplayScript.triggerContainerNameChange(j, a) } }).on("click", function () { d(), qp_sectionDisplayScript.initUiSortable(e.find(".openCardSorting" + a), f, e, a); var b = $("#QuestionSection_" + a + " .cont-" + i + " input"); qp_sectionDisplayScript.openCardSortingLookUp(b, a, c), i += 1 }) } }, triggerContainerNameChange: function (a, b) { for (var c = $(a.parentNode.parentNode.getElementsByTagName("ul")[0]).children("li"), d = c.length, e = 0; e < d; e++) { var f = a.value, g = e + 1, h = g + "-" + f; $("#" + c[e].id + "ID").val(h) } return !1 }, openCardSortingLookUp: function (a, b, c) { var d = []; $(a).autoComplete({ minChars: 2, delay: 400, cache: !1, source: function (e, f) { d = [], qp_sectionDisplayScript.showVisibility("spinnerm_" + b), $.ajax({ url: "/a/AjaxProcessor?id=" + c + "&questionID=" + b + "&mode=update&value=" + $(a).val(), type: "POST", dataType: "html", success: function (a) { var c = $.parseHTML(a); nodeNames = [], $.each(c, function (a, b) { if ("OPTION" == b.nodeName) { var c = [b.value, b.textContent]; d.push(c) } }), d.length > 0 ? (qp_sectionDisplayScript.hideVisibility("errorDIV_" + b), $("#errorDIV_" + b).html("")) : (qp_sectionDisplayScript.showVisibility("errorDIV_" + b), $("#errorDIV_" + b).html("No suggestions found")), qp_sectionDisplayScript.hideVisibility("spinnerm_" + b), f(d) } }) }, renderItem: function (a, b) { b = b.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"); var c = new RegExp("(" + b.split(" ").join("|") + ")", "gi"); return '<div class="autocomplete-suggestion" data-langname="' + a[1].replace(/"/g, "&quot;") + '" data-lang="' + a[0] + '" data-val="' + b + '">' + a[1].replace(c, "<b>$1</b>") + "</div>" }, onSelect: function (b, c, d) { $(a).parent(".input-wrapper").before("<span class='tag' value=" + d.data("lang") + ">" + d.data("langname") + "</span>"), $(a).val(d.data("lang")) } }) }, initMatrixAutoFocus: function (a) { function b() { $(window).width() < 767 ? g.find(".parent-table tbody tr.active td").length > 4 && g.find(".parent-table").css("min-width", "500px") : g.find(".parent-table").removeAttr("style") } function c() { var a = g.find(".has-mobile-rendering"); a.length > 0 && a.hasClass("is-automatrix") ? (a.removeClass("is-automatrix"), g.find(".parent-table").removeAttr("style")) : 0 != a.length || g.find(".matrix-multipoint-question").hasClass("is-automatrix") || g.find(".matrix-multipoint-question").addClass("is-automatrix") } function d() { if (0 === $(n).find("td input[type='radio']:checked").length && s && 0 === s.requiredValidationType && 1 !== t) $(n).next(".error-tr").find(".error").html(getValidationMessageText(n, getValidationMessageKeyForMatrixAutoFocus(t))).removeClass("hidden vhidden"); else { if ($(n).next(".error-tr").find(".error").addClass("hidden vhidden"), w < u) { var a = n.next(); n.removeClass("active"), $(n).each(function () { w++, $(v).text(w), z.css("stroke-dashoffset", x - y * w), $(a).hasClass("error-tr") ? (n = a.next().addClass("active"), p = $(this).outerHeight() + m.outerHeight(), o += p) : (n = a.addClass("active"), p = $(this).outerHeight(), o += p), f(o), q.hasClass("active") || (B.addClass("active"), $(B).css("visibility", "visible")), r.hasClass("active") && (A.removeClass("active"), $(A).css("visibility", "hidden")) }) } g.find("td input[type='radio']:checked").length === u && w === u && r.find(".radio-check").is(":checked") && z.css("stroke", "#3FCA5A") } } function e() { if (w > 1) { var a = n.prev(); n.removeClass("active"), n.next(".error-tr").find(".error").addClass("hidden vhidden"), $(n).each(function () { w--, $(v).text(w), z.css("stroke-dashoffset", x - y * w), $(a).hasClass("error-tr") ? (n = a.prev().addClass("active"), p = $(this).outerHeight() + m.outerHeight(), o -= p) : (n = a.addClass("active"), p = $(this).outerHeight(), o -= p), f(o), r.hasClass("active") || (A.addClass("active"), $(A).css("visibility", "visible")), q.hasClass("active") && (B.removeClass("active"), $(B).css("visibility", "hidden")) }) } z.css("stroke", "#A9A9A9") } function f(a) { $(k).stop(!0).animate({ scrollTop: a }, 500) } var g = $("#QuestionSection_" + a), h = g.children(".is-automatrix"), i = h.find(".table-wrapper .parent-table thead"), j = i.outerHeight(), k = h.find(".table-wrapper .parent-table tbody"), l = k.find("tr"); l.first().addClass("active"); var m = k.find("tr.error-tr"), n = l.filter(".active"), o = 0, p = 0, q = l.not(".error-tr").first(), r = l.not(".error-tr").last(); k.append('<tr class="dummy-tr"> &nbsp; </tr>'), $(n).next().hasClass("error-tr") ? $(".dummy-tr").css("height", n.outerHeight() + m.outerHeight() + "px") : $(".dummy-tr").css("height", n.outerHeight() + "px"); var s, t, u = l.not(".error-tr, .dummy-tr").length, v = h.find(".count-score"), w = 1, x = 81.64, y = x / u, z = h.find(".scroll-count svg .count-prog-bar"), A = h.find(".scroll-next"), B = h.find(".scroll-prev"), C = h.find(".matrix-inner-scroll"); $(A).addClass("active"), $(B).css("visibility", "hidden"), z.css("stroke-dashoffset", x - y), C.css("padding-top", j + 16), g.find(".scroll-count svg .count-prog-bar").css("stroke", "#A9A9A9"); for (var D = 0; D < qp_sections.length; D++)if (qp_sections[D].firstQuestionID === a) { s = qp_sections[D], t = s.matrixValidationType ? s.matrixValidationType : 0; break } $(window).on("resize", function () { b(), c() }), c(), $(A).on("click", function () { d() }), $(B).on("click", function () { e() }), l.find("td input[type='radio']").on("click", function () { d() }), r.find(".radio-check").on("click", function () { r.parents(".survey-question-wrapper").find(".ok-wrapper .ok-btn").trigger("click"), $(this).closest('[id^="QuestionSection_"]').find(".scroll-prev").css("visibility", "visible"), $(this).closest('[id^="QuestionSection_"]').find(".scroll-next").css("visibility", "hidden") }), h.find(".table-wrapper .parent-table tr .answer-options .control-label").each(function () { if (this.offsetHeight < this.scrollHeight || this.offsetWidth < this.scrollWidth) { var a = $(this).text(); $(this).attr({ "data-qptooltip": "tooltip", "data-qptitle": a }).tooltipster({ arrow: !1, debug: !1, delay: 50, interactive: !0, maxWidth: 350, side: ["bottom", "top", "right", "left"], speed: 300 }) } }) }, sendCode: function (a, b, c) { $(".els-verify-email").attr("style", "opacity:0.2; pointer-events:none;"), $("#emailAddress").text($("#" + c + "ID").val()), $(".els-verify-code").show(), $(".els-verify-code").attr("style", ""), $("html,body").animate({ scrollTop: $(".els-verify-code").offset().top }, "slow"); var d = "mainDIV_" + a; qp_sectionDisplayScript.ajaxPostLink("errorSpan", "/a/AjaxProcessor?id=" + b + "&questionID=" + a + "&divID=" + d + "&mode=update&action=sendCode&email=" + $("#" + c + "ID").val(), function () { }) }, resendCode: function (a, b, c) { qp_sectionDisplayScript.clearAllOTPFields(), $(".els-verify-code .verify-btn").css("visibility", "hidden"), $("#errorSpan").html(""), $("#error").html("Code re-send successfully"); var d = "mainDIV_" + a; qp_sectionDisplayScript.ajaxPostLink("errorSpan", "/a/AjaxProcessor?id=" + b + "&questionID=" + a + "&divID=" + d + "&mode=update&action=resendCode&email=" + $("#" + c + "ID").val(), function () { }) }, changeMail: function () { qp_sectionDisplayScript.clearAllOTPFields(), $(".els-verify-code .verify-btn").css("visibility", "hidden"), $("#errorSpan").html(""), $("#error").html(""), $(".els-verify-code").attr("style", "opacity:0.2; pointer-events:none;"), $(".els-verify-email").attr("style", ""), $(".els-verify-email").show(), $("html,body").animate({ scrollTop: $(".els-verify-email").offset().top }, "slow") }, verifyCode: function (a, b, c) { var d = "mainDIV_" + a; qp_sectionDisplayScript.ajaxPostLink("errorSpan", "/a/AjaxProcessor?id=" + b + "&questionID=" + a + "&divID=" + d + "&mode=validate&action=verifyCode&values=" + c, function () { 0 == $("#errorSpan").children().length ? ($(".els-verify-code").hide(), $(".els-signature-sec").show()) : (qp_sectionDisplayScript.clearAllOTPFields(), $(".els-verify-code").show()) }) }, onVerification: function (a) { }, initEditMode: function (a) { $("#review_form_" + a + " .survey-question-wrapper").removeClass("is-review-mode") }, onReviewSuccessValidation: function (a) { var b = "section_" + a, c = $("#review_form_" + a)[0]; this.ajaxSubmitFormObject(b, "/a/UpdateResponse", c) }, submitReviewQuestionForm: function (a) { var b = []; b.push(a), 0 == qp_validateSurvey(b, qp_sectionDisplayScript.onReviewSuccessValidation.bind(this, a.sectionID)) && this.onReviewSuccessValidation(a.sectionID) }
};
//# sourceMappingURL=survey-template-outside-script.min.js.map